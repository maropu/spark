*Sort [product_name#0 ASC NULLS FIRST, store_name#0 ASC NULLS FIRST, cnt#0L ASC NULLS FIRST], true, 0
+- Exchange rangepartitioning(product_name#0 ASC NULLS FIRST, store_name#0 ASC NULLS FIRST, cnt#0L ASC NULLS FIRST, 5)
   +- *Project [b_streen_name#0, syear#0, syear#0, b_zip#0, b_city#0, b_street_number#0, c_city#0, product_name#0, s1#0, c_street_number#0, s2#0, s3#0, s1#0, s2#0, s3#0, store_zip#0, cnt#0L, cnt#0L, c_zip#0, store_name#0, c_street_name#0]
      +- *BroadcastHashJoin [item_sk#0, store_name#0, store_zip#0], [item_sk#0, store_name#0, store_zip#0], Inner, BuildRight, (cnt#0L <= cnt#0L)
         :- *HashAggregate(keys=[i_product_name#0, i_item_sk#0, s_store_name#0, s_zip#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0, d_year#0, d_year#0, d_year#0], functions=[count(1), sum(UnscaledValue(ss_wholesale_cost#0)), sum(UnscaledValue(ss_list_price#0)), sum(UnscaledValue(ss_coupon_amt#0))])
         :  +- Exchange hashpartitioning(i_product_name#0, i_item_sk#0, s_store_name#0, s_zip#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0, d_year#0, d_year#0, d_year#0, 5)
         :     +- *HashAggregate(keys=[i_product_name#0, i_item_sk#0, s_store_name#0, s_zip#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0, d_year#0, d_year#0, d_year#0], functions=[partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#0)), partial_sum(UnscaledValue(ss_list_price#0)), partial_sum(UnscaledValue(ss_coupon_amt#0))])
         :        +- *Project [i_product_name#0, d_year#0, d_year#0, d_year#0, ss_list_price#0, i_item_sk#0, ca_city#0, ca_city#0, ca_street_number#0, ca_street_number#0, ca_street_name#0, ca_street_name#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ca_zip#0, ca_zip#0, s_store_name#0]
         :           +- *BroadcastHashJoin [ss_item_sk#0], [i_item_sk#0], Inner, BuildRight
         :              :- *Project [d_year#0, d_year#0, d_year#0, ss_list_price#0, ca_city#0, ca_city#0, ss_item_sk#0, ca_street_number#0, ca_street_number#0, ca_street_name#0, ca_street_name#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ca_zip#0, ca_zip#0, s_store_name#0]
         :              :  +- *BroadcastHashJoin [hd_income_band_sk#0], [ib_income_band_sk#0], Inner, BuildRight
         :              :     :- *Project [d_year#0, d_year#0, d_year#0, ss_list_price#0, hd_income_band_sk#0, ca_city#0, ca_city#0, ss_item_sk#0, ca_street_number#0, ca_street_number#0, ca_street_name#0, ca_street_name#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ca_zip#0, ca_zip#0, s_store_name#0]
         :              :     :  +- *BroadcastHashJoin [hd_income_band_sk#0], [ib_income_band_sk#0], Inner, BuildRight
         :              :     :     :- *Project [d_year#0, d_year#0, d_year#0, ss_list_price#0, hd_income_band_sk#0, hd_income_band_sk#0, ca_city#0, ca_city#0, ss_item_sk#0, ca_street_number#0, ca_street_number#0, ca_street_name#0, ca_street_name#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ca_zip#0, ca_zip#0, s_store_name#0]
         :              :     :     :  +- *BroadcastHashJoin [c_current_addr_sk#0], [ca_address_sk#0], Inner, BuildRight
         :              :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, ss_list_price#0, hd_income_band_sk#0, hd_income_band_sk#0, ca_city#0, ss_item_sk#0, ca_street_number#0, ca_street_name#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ca_zip#0, s_store_name#0]
         :              :     :     :     :  +- *BroadcastHashJoin [ss_addr_sk#0], [ca_address_sk#0], Inner, BuildRight
         :              :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, ss_list_price#0, hd_income_band_sk#0, hd_income_band_sk#0, ss_item_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0]
         :              :     :     :     :     :  +- *BroadcastHashJoin [c_current_hdemo_sk#0], [hd_demo_sk#0], Inner, BuildRight
         :              :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, hd_income_band_sk#0, ss_item_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0]
         :              :     :     :     :     :     :  +- *BroadcastHashJoin [ss_hdemo_sk#0], [hd_demo_sk#0], Inner, BuildRight
         :              :     :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0]
         :              :     :     :     :     :     :     :  +- *BroadcastHashJoin [ss_promo_sk#0], [p_promo_sk#0], Inner, BuildRight
         :              :     :     :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0]
         :              :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [c_current_cdemo_sk#0], [cd_demo_sk#0], Inner, BuildRight, NOT (cd_marital_status#0 = cd_marital_status#0)
         :              :     :     :     :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, ss_hdemo_sk#0, c_current_cdemo_sk#0, ss_item_sk#0, cd_marital_status#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0]
         :              :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [ss_cdemo_sk#0], [cd_demo_sk#0], Inner, BuildRight
         :              :     :     :     :     :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, ss_hdemo_sk#0, c_current_cdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0]
         :              :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [c_first_shipto_date_sk#0], [d_date_sk#0], Inner, BuildRight
         :              :     :     :     :     :     :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, ss_hdemo_sk#0, c_current_cdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0, c_first_shipto_date_sk#0]
         :              :     :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [c_first_sales_date_sk#0], [d_date_sk#0], Inner, BuildRight
         :              :     :     :     :     :     :     :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, ss_hdemo_sk#0, c_current_cdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, c_first_sales_date_sk#0, s_zip#0, ss_addr_sk#0, s_store_name#0, c_first_shipto_date_sk#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [ss_customer_sk#0], [c_customer_sk#0], Inner, BuildRight
         :              :     :     :     :     :     :     :     :     :     :     :     :     :- *Project [d_year#0, ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_customer_sk#0, ss_addr_sk#0, s_store_name#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [ss_store_sk#0], [s_store_sk#0], Inner, BuildRight
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :- *Project [d_year#0, ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_store_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, ss_customer_sk#0, ss_addr_sk#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *Project [ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_store_sk#0, ss_sold_date_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, ss_customer_sk#0, ss_addr_sk#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [ss_item_sk#0], [cs_item_sk#0], Inner, BuildRight
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *Project [ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_store_sk#0, ss_sold_date_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, ss_customer_sk#0, ss_addr_sk#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [cast(ss_item_sk#0 as bigint), cast(ss_ticket_number#0 as bigint)], [sr_item_sk#0L, sr_ticket_number#0L], Inner, BuildRight
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *Project [ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_ticket_number#0, ss_cdemo_sk#0, ss_store_sk#0, ss_sold_date_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, ss_customer_sk#0, ss_addr_sk#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *Filter ((((((((isnotnull(ss_hdemo_sk#0) && isnotnull(ss_cdemo_sk#0)) && isnotnull(ss_item_sk#0)) && isnotnull(ss_store_sk#0)) && isnotnull(ss_ticket_number#0)) && isnotnull(ss_customer_sk#0)) && isnotnull(ss_promo_sk#0)) && isnotnull(ss_sold_date_sk#0)) && isnotnull(ss_addr_sk#0))
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_item_sk#0,ss_customer_sk#0,ss_cdemo_sk#0,ss_hdemo_sk#0,ss_addr_sk#0,ss_store_sk#0,ss_promo_sk#0,ss_ticket_number#0,ss_wholesale_cost#0,ss_list_price#0,ss_coupon_amt#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ss_a...
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true], input[1, bigint, true]))
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *Project [sr_item_sk#0L, sr_ticket_number#0L]
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *Filter (isnotnull(sr_item_sk#0L) && isnotnull(sr_ticket_number#0L))
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *FileScan parquet default.store_returns[sr_item_sk#0L,sr_ticket_number#0L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,sr_ticket_number:bigint>
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *Project [cs_item_sk#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *Filter ((cast(sum(cs_ext_list_price#0)#0 as decimal(21,2)) > CheckOverflow((2.00 * promote_precision(sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#0 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#0 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) + promote_precision(cast(cr_store_credit#0 as decimal(9,2)))), DecimalType(9,2)))#0)), DecimalType(21,2))) && isnotnull(sum(cs_ext_list_price#0)#0))
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *HashAggregate(keys=[cs_item_sk#0], functions=[sum(UnscaledValue(cs_ext_list_price#0)), sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#0 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#0 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) + promote_precision(cast(cr_store_credit#0 as decimal(9,2)))), DecimalType(9,2)))])
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- Exchange hashpartitioning(cs_item_sk#0, 5)
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- *HashAggregate(keys=[cs_item_sk#0], functions=[partial_sum(UnscaledValue(cs_ext_list_price#0)), partial_sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#0 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#0 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) + promote_precision(cast(cr_store_credit#0 as decimal(9,2)))), DecimalType(9,2)))])
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                       +- *Project [cr_refunded_cash#0, cs_ext_list_price#0, cr_reversed_charge#0, cr_store_credit#0, cs_item_sk#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                          +- *BroadcastHashJoin [cs_item_sk#0, cs_order_number#0], [cr_item_sk#0, cr_order_number#0], Inner, BuildRight
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :- *Project [cs_ext_list_price#0, cs_order_number#0, cs_item_sk#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :  +- *Filter (isnotnull(cs_order_number#0) && isnotnull(cs_item_sk#0))
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :     +- *FileScan parquet default.catalog_sales[cs_item_sk#0,cs_order_number#0,cs_ext_list_price#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,2)>
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, true] as bigint), 32) | (cast(input[1, int, true] as bigint) & 4294967295))))
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                +- *Project [cr_refunded_cash#0, cr_reversed_charge#0, cr_store_credit#0, cr_item_sk#0, cr_order_number#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                   +- *Filter (isnotnull(cr_order_number#0) && isnotnull(cr_item_sk#0))
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                      +- *FileScan parquet default.catalog_returns[cr_item_sk#0,cr_order_number#0,cr_refunded_cash#0,cr_reversed_charge#0,cr_store_credit#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,cr_reversed_charge:decima...
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *Project [d_date_sk#0, d_year#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *Filter ((isnotnull(d_year#0) && isnotnull(d_date_sk#0)) && (1999 = d_year#0))
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_year:int>
         :              :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     :     :     :     :     :     :     :     :     :     :     :        +- *Project [s_zip#0, s_store_sk#0, s_store_name#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :     :           +- *Filter ((isnotnull(s_store_name#0) && isnotnull(s_store_sk#0)) && isnotnull(s_zip#0))
         :              :     :     :     :     :     :     :     :     :     :     :     :     :              +- *FileScan parquet default.store[s_store_sk#0,s_store_name#0,s_zip#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,s_zip:string>
         :              :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     :     :     :     :     :     :     :     :     :     :        +- *Project [c_current_addr_sk#0, c_current_hdemo_sk#0, c_customer_sk#0, c_current_cdemo_sk#0, c_first_sales_date_sk#0, c_first_shipto_date_sk#0]
         :              :     :     :     :     :     :     :     :     :     :     :     :           +- *Filter (((((isnotnull(c_current_addr_sk#0) && isnotnull(c_first_sales_date_sk#0)) && isnotnull(c_first_shipto_date_sk#0)) && isnotnull(c_current_hdemo_sk#0)) && isnotnull(c_customer_sk#0)) && isnotnull(c_current_cdemo_sk#0))
         :              :     :     :     :     :     :     :     :     :     :     :     :              +- *FileScan parquet default.customer[c_customer_sk#0,c_current_cdemo_sk#0,c_current_hdemo_sk#0,c_current_addr_sk#0,c_first_shipto_date_sk#0,c_first_sales_date_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,c_fi...
         :              :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     :     :     :     :     :     :     :     :     :        +- *Project [d_date_sk#0, d_year#0]
         :              :     :     :     :     :     :     :     :     :     :     :           +- *Filter isnotnull(d_date_sk#0)
         :              :     :     :     :     :     :     :     :     :     :     :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_year:int>
         :              :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#0, d_year#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     :     :     :     :     :     :     :        +- *Project [cd_marital_status#0, cd_demo_sk#0]
         :              :     :     :     :     :     :     :     :     :           +- *Filter (isnotnull(cd_demo_sk#0) && isnotnull(cd_marital_status#0))
         :              :     :     :     :     :     :     :     :     :              +- *FileScan parquet default.customer_demographics[cd_demo_sk#0,cd_marital_status#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,cd_marital_status:string>
         :              :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#0, cd_marital_status#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     :     :     :     :     :        +- *Project [p_promo_sk#0]
         :              :     :     :     :     :     :     :           +- *Filter isnotnull(p_promo_sk#0)
         :              :     :     :     :     :     :     :              +- *FileScan parquet default.promotion[p_promo_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>, ReadSchema: struct<p_promo_sk:int>
         :              :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     :     :     :     :        +- *Project [hd_income_band_sk#0, hd_demo_sk#0]
         :              :     :     :     :     :     :           +- *Filter (isnotnull(hd_income_band_sk#0) && isnotnull(hd_demo_sk#0))
         :              :     :     :     :     :     :              +- *FileScan parquet default.household_demographics[hd_demo_sk#0,hd_income_band_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,hd_income_band_sk:int>
         :              :     :     :     :     :     +- ReusedExchange [hd_demo_sk#0, hd_income_band_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     :     :        +- *Project [ca_city#0, ca_address_sk#0, ca_street_number#0, ca_street_name#0, ca_zip#0]
         :              :     :     :     :           +- *Filter isnotnull(ca_address_sk#0)
         :              :     :     :     :              +- *FileScan parquet default.customer_address[ca_address_sk#0,ca_street_number#0,ca_street_name#0,ca_city#0,ca_zip#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ca_zip:string>
         :              :     :     :     +- ReusedExchange [ca_address_sk#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              :     :        +- *Project [ib_income_band_sk#0]
         :              :     :           +- *Filter isnotnull(ib_income_band_sk#0)
         :              :     :              +- *FileScan parquet default.income_band[ib_income_band_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>, ReadSchema: struct<ib_income_band_sk:int>
         :              :     +- ReusedExchange [ib_income_band_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :                 +- *Project [i_product_name#0, i_item_sk#0]
         :                    +- *Filter (((((((79.00 >= cast(i_current_price#0 as decimal(12,2))) && (74.00 >= cast(i_current_price#0 as decimal(12,2)))) && isnotnull(i_item_sk#0)) && i_color#0 IN (purple,burlywood,indian,spring,floral,medium)) && (65.00 <= cast(i_current_price#0 as decimal(12,2)))) && (i_current_price#0 >= 64.00)) && isnotnull(i_current_price#0))
         :                       +- *FileScan parquet default.item[i_item_sk#0,i_current_price#0,i_color#0,i_product_name#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,i_product_name:string>
         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, true], input[1, string, true], input[2, string, true]))
            +- *HashAggregate(keys=[i_product_name#0, i_item_sk#0, s_store_name#0, s_zip#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0, d_year#0, d_year#0, d_year#0], functions=[count(1), sum(UnscaledValue(ss_wholesale_cost#0)), sum(UnscaledValue(ss_list_price#0)), sum(UnscaledValue(ss_coupon_amt#0))])
               +- Exchange hashpartitioning(i_product_name#0, i_item_sk#0, s_store_name#0, s_zip#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0, d_year#0, d_year#0, d_year#0, 5)
                  +- *HashAggregate(keys=[i_product_name#0, i_item_sk#0, s_store_name#0, s_zip#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0, d_year#0, d_year#0, d_year#0], functions=[partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#0)), partial_sum(UnscaledValue(ss_list_price#0)), partial_sum(UnscaledValue(ss_coupon_amt#0))])
                     +- *Project [i_product_name#0, d_year#0, d_year#0, d_year#0, ss_list_price#0, i_item_sk#0, ca_city#0, ca_city#0, ca_street_number#0, ca_street_number#0, ca_street_name#0, ca_street_name#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ca_zip#0, ca_zip#0, s_store_name#0]
                        +- *BroadcastHashJoin [ss_item_sk#0], [i_item_sk#0], Inner, BuildRight
                           :- *Project [d_year#0, d_year#0, d_year#0, ss_list_price#0, ca_city#0, ca_city#0, ss_item_sk#0, ca_street_number#0, ca_street_number#0, ca_street_name#0, ca_street_name#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ca_zip#0, ca_zip#0, s_store_name#0]
                           :  +- *BroadcastHashJoin [hd_income_band_sk#0], [ib_income_band_sk#0], Inner, BuildRight
                           :     :- *Project [d_year#0, d_year#0, d_year#0, ss_list_price#0, hd_income_band_sk#0, ca_city#0, ca_city#0, ss_item_sk#0, ca_street_number#0, ca_street_number#0, ca_street_name#0, ca_street_name#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ca_zip#0, ca_zip#0, s_store_name#0]
                           :     :  +- *BroadcastHashJoin [hd_income_band_sk#0], [ib_income_band_sk#0], Inner, BuildRight
                           :     :     :- *Project [d_year#0, d_year#0, d_year#0, ss_list_price#0, hd_income_band_sk#0, hd_income_band_sk#0, ca_city#0, ca_city#0, ss_item_sk#0, ca_street_number#0, ca_street_number#0, ca_street_name#0, ca_street_name#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ca_zip#0, ca_zip#0, s_store_name#0]
                           :     :     :  +- *BroadcastHashJoin [c_current_addr_sk#0], [ca_address_sk#0], Inner, BuildRight
                           :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, ss_list_price#0, hd_income_band_sk#0, hd_income_band_sk#0, ca_city#0, ss_item_sk#0, ca_street_number#0, ca_street_name#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ca_zip#0, s_store_name#0]
                           :     :     :     :  +- *BroadcastHashJoin [ss_addr_sk#0], [ca_address_sk#0], Inner, BuildRight
                           :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, ss_list_price#0, hd_income_band_sk#0, hd_income_band_sk#0, ss_item_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0]
                           :     :     :     :     :  +- *BroadcastHashJoin [c_current_hdemo_sk#0], [hd_demo_sk#0], Inner, BuildRight
                           :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, hd_income_band_sk#0, ss_item_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0]
                           :     :     :     :     :     :  +- *BroadcastHashJoin [ss_hdemo_sk#0], [hd_demo_sk#0], Inner, BuildRight
                           :     :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0]
                           :     :     :     :     :     :     :  +- *BroadcastHashJoin [ss_promo_sk#0], [p_promo_sk#0], Inner, BuildRight
                           :     :     :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0]
                           :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [c_current_cdemo_sk#0], [cd_demo_sk#0], Inner, BuildRight, NOT (cd_marital_status#0 = cd_marital_status#0)
                           :     :     :     :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, ss_hdemo_sk#0, c_current_cdemo_sk#0, ss_item_sk#0, cd_marital_status#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0]
                           :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [ss_cdemo_sk#0], [cd_demo_sk#0], Inner, BuildRight
                           :     :     :     :     :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, ss_hdemo_sk#0, c_current_cdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0]
                           :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [c_first_shipto_date_sk#0], [d_date_sk#0], Inner, BuildRight
                           :     :     :     :     :     :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, ss_hdemo_sk#0, c_current_cdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_addr_sk#0, s_store_name#0, c_first_shipto_date_sk#0]
                           :     :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [c_first_sales_date_sk#0], [d_date_sk#0], Inner, BuildRight
                           :     :     :     :     :     :     :     :     :     :     :     :- *Project [c_current_addr_sk#0, d_year#0, c_current_hdemo_sk#0, ss_list_price#0, ss_hdemo_sk#0, c_current_cdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, c_first_sales_date_sk#0, s_zip#0, ss_addr_sk#0, s_store_name#0, c_first_shipto_date_sk#0]
                           :     :     :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [ss_customer_sk#0], [c_customer_sk#0], Inner, BuildRight
                           :     :     :     :     :     :     :     :     :     :     :     :     :- *Project [d_year#0, ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, s_zip#0, ss_customer_sk#0, ss_addr_sk#0, s_store_name#0]
                           :     :     :     :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [ss_store_sk#0], [s_store_sk#0], Inner, BuildRight
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :- *Project [d_year#0, ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_store_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, ss_customer_sk#0, ss_addr_sk#0]
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *Project [ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_store_sk#0, ss_sold_date_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, ss_customer_sk#0, ss_addr_sk#0]
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [ss_item_sk#0], [cs_item_sk#0], Inner, BuildRight
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *Project [ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_cdemo_sk#0, ss_store_sk#0, ss_sold_date_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, ss_customer_sk#0, ss_addr_sk#0]
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *BroadcastHashJoin [cast(ss_item_sk#0 as bigint), cast(ss_ticket_number#0 as bigint)], [sr_item_sk#0L, sr_ticket_number#0L], Inner, BuildRight
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *Project [ss_list_price#0, ss_hdemo_sk#0, ss_item_sk#0, ss_ticket_number#0, ss_cdemo_sk#0, ss_store_sk#0, ss_sold_date_sk#0, ss_promo_sk#0, ss_wholesale_cost#0, ss_coupon_amt#0, ss_customer_sk#0, ss_addr_sk#0]
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *Filter ((((((((isnotnull(ss_hdemo_sk#0) && isnotnull(ss_cdemo_sk#0)) && isnotnull(ss_item_sk#0)) && isnotnull(ss_store_sk#0)) && isnotnull(ss_ticket_number#0)) && isnotnull(ss_customer_sk#0)) && isnotnull(ss_promo_sk#0)) && isnotnull(ss_sold_date_sk#0)) && isnotnull(ss_addr_sk#0))
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_item_sk#0,ss_customer_sk#0,ss_cdemo_sk#0,ss_hdemo_sk#0,ss_addr_sk#0,ss_store_sk#0,ss_promo_sk#0,ss_ticket_number#0,ss_wholesale_cost#0,ss_list_price#0,ss_coupon_amt#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ss_a...
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [sr_item_sk#0L, sr_ticket_number#0L], BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true], input[1, bigint, true]))
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [cs_item_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *Project [d_date_sk#0, d_year#0]
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *Filter ((isnotnull(d_year#0) && isnotnull(d_date_sk#0)) && (2000 = d_year#0))
                           :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_year:int>
                           :     :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [s_store_sk#0, s_store_name#0, s_zip#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [c_customer_sk#0, c_current_cdemo_sk#0, c_current_hdemo_sk#0, c_current_addr_sk#0, c_first_shipto_date_sk#0, c_first_sales_date_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#0, d_year#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#0, d_year#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#0, cd_marital_status#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#0, cd_marital_status#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :     :     :     :     :     +- ReusedExchange [p_promo_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :     :     :     :     +- ReusedExchange [hd_demo_sk#0, hd_income_band_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :     :     :     +- ReusedExchange [hd_demo_sk#0, hd_income_band_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :     :     +- ReusedExchange [ca_address_sk#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     :     +- ReusedExchange [ca_address_sk#0, ca_street_number#0, ca_street_name#0, ca_city#0, ca_zip#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     :     +- ReusedExchange [ib_income_band_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           :     +- ReusedExchange [ib_income_band_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           +- ReusedExchange [i_item_sk#0, i_product_name#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
