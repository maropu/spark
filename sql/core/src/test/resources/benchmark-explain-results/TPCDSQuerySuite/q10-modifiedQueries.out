TakeOrderedAndProject(limit=100, orderBy=[cd_gender#0 ASC NULLS FIRST,cd_marital_status#0 ASC NULLS FIRST,cd_education_status#0 ASC NULLS FIRST,cd_purchase_estimate#0 ASC NULLS FIRST,cd_credit_rating#0 ASC NULLS FIRST,cd_dep_count#0 ASC NULLS FIRST,cd_dep_employed_count#0 ASC NULLS FIRST,cd_dep_college_count#0 ASC NULLS FIRST], output=[cd_gender#0,cd_marital_status#0,cd_education_status#0,cnt1#0L,cd_purchase_estimate#0,cnt2#0L,cd_credit_rating#0,cnt3#0L,cd_dep_count#0,cnt4#0L,cd_dep_employed_count#0,cnt5#0L,cd_dep_college_count#0,cnt6#0L])
+- *HashAggregate(keys=[cd_gender#0, cd_marital_status#0, cd_education_status#0, cd_purchase_estimate#0, cd_credit_rating#0, cd_dep_count#0, cd_dep_employed_count#0, cd_dep_college_count#0], functions=[count(1)])
   +- Exchange hashpartitioning(cd_gender#0, cd_marital_status#0, cd_education_status#0, cd_purchase_estimate#0, cd_credit_rating#0, cd_dep_count#0, cd_dep_employed_count#0, cd_dep_college_count#0, 5)
      +- *HashAggregate(keys=[cd_gender#0, cd_marital_status#0, cd_education_status#0, cd_purchase_estimate#0, cd_credit_rating#0, cd_dep_count#0, cd_dep_employed_count#0, cd_dep_college_count#0], functions=[partial_count(1)])
         +- *Project [cd_education_status#0, cd_dep_count#0, cd_gender#0, cd_marital_status#0, cd_credit_rating#0, cd_dep_college_count#0, cd_purchase_estimate#0, cd_dep_employed_count#0]
            +- *BroadcastHashJoin [c_customer_sk#0], [customer_sk#0], LeftSemi, BuildRight
               :- *BroadcastHashJoin [c_customer_sk#0], [customer_sk#0], LeftSemi, BuildRight
               :  :- *Project [cd_education_status#0, cd_dep_count#0, cd_gender#0, c_customer_sk#0, cd_marital_status#0, cd_credit_rating#0, cd_dep_college_count#0, cd_purchase_estimate#0, cd_dep_employed_count#0]
               :  :  +- *BroadcastHashJoin [c_current_cdemo_sk#0], [cd_demo_sk#0], Inner, BuildRight
               :  :     :- *Project [c_customer_sk#0, c_current_cdemo_sk#0]
               :  :     :  +- *BroadcastHashJoin [c_current_addr_sk#0], [ca_address_sk#0], Inner, BuildRight
               :  :     :     :- *Project [c_current_addr_sk#0, c_customer_sk#0, c_current_cdemo_sk#0]
               :  :     :     :  +- *Filter ((isnotnull(c_current_addr_sk#0) && isnotnull(c_customer_sk#0)) && isnotnull(c_current_cdemo_sk#0))
               :  :     :     :     +- *FileScan parquet default.customer[c_customer_sk#0,c_current_cdemo_sk#0,c_current_addr_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,c_current_addr_sk:int>
               :  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :  :     :        +- *Project [ca_address_sk#0]
               :  :     :           +- *Filter (isnotnull(ca_address_sk#0) && ca_county#0 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County))
               :  :     :              +- *FileScan parquet default.customer_address[ca_address_sk#0,ca_county#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ca_county:string>
               :  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :  :        +- *Project [cd_education_status#0, cd_dep_count#0, cd_gender#0, cd_marital_status#0, cd_credit_rating#0, cd_demo_sk#0, cd_dep_college_count#0, cd_purchase_estimate#0, cd_dep_employed_count#0]
               :  :           +- *Filter isnotnull(cd_demo_sk#0)
               :  :              +- *FileScan parquet default.customer_demographics[cd_demo_sk#0,cd_gender#0,cd_marital_status#0,cd_education_status#0,cd_purchase_estimate#0,cd_credit_rating#0,cd_dep_count#0,cd_dep_employed_count#0,cd_dep_college_count#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,cd_pur...
               :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     +- Union
               :        :- *Project [ws_bill_customer_sk#0 AS none#0]
               :        :  +- *BroadcastHashJoin [ws_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
               :        :     :- *Project [ws_bill_customer_sk#0, ws_sold_date_sk#0]
               :        :     :  +- *Filter isnotnull(ws_sold_date_sk#0)
               :        :     :     +- *FileScan parquet default.web_sales[ws_sold_date_sk#0,ws_bill_customer_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ws_bill_customer_sk:int>
               :        :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :        :        +- *Project [d_date_sk#0]
               :        :           +- *Filter (((((isnotnull(d_date_sk#0) && (d_moy#0 <= 7)) && isnotnull(d_moy#0)) && isnotnull(d_year#0)) && (d_moy#0 >= 4)) && (2002 = d_year#0))
               :        :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0,d_moy#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_moy:int>
               :        +- *Project [cs_ship_customer_sk#0 AS none#0]
               :           +- *BroadcastHashJoin [cs_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
               :              :- *Project [cs_ship_customer_sk#0, cs_sold_date_sk#0]
               :              :  +- *Filter isnotnull(cs_sold_date_sk#0)
               :              :     +- *FileScan parquet default.catalog_sales[cs_sold_date_sk#0,cs_ship_customer_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,cs_ship_customer_sk:int>
               :              +- ReusedExchange [d_date_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  +- *Project [ss_customer_sk#0 AS none#0]
                     +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
                        :- *Project [ss_sold_date_sk#0, ss_customer_sk#0]
                        :  +- *Filter isnotnull(ss_sold_date_sk#0)
                        :     +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_customer_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ss_customer_sk:int>
                        +- ReusedExchange [d_date_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
