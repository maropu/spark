TakeOrderedAndProject(limit=100, orderBy=[segment#0 ASC NULLS FIRST,num_customers#0L ASC NULLS FIRST], output=[segment#0,num_customers#0L,segment_base#0])
+- *HashAggregate(keys=[segment#0], functions=[count(1)])
   +- Exchange hashpartitioning(segment#0, 5)
      +- *HashAggregate(keys=[segment#0], functions=[partial_count(1)])
         +- *HashAggregate(keys=[c_customer_sk#0], functions=[sum(UnscaledValue(ss_ext_sales_price#0))])
            +- Exchange hashpartitioning(c_customer_sk#0, 5)
               +- *HashAggregate(keys=[c_customer_sk#0], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#0))])
                  +- *Project [c_customer_sk#0, ss_ext_sales_price#0]
                     +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
                        :- *Project [c_customer_sk#0, ss_sold_date_sk#0, ss_ext_sales_price#0]
                        :  +- *BroadcastHashJoin [ca_county#0, ca_state#0], [s_county#0, s_state#0], Inner, BuildRight
                        :     :- *Project [c_customer_sk#0, ss_sold_date_sk#0, ca_county#0, ca_state#0, ss_ext_sales_price#0]
                        :     :  +- *BroadcastHashJoin [c_current_addr_sk#0], [ca_address_sk#0], Inner, BuildRight
                        :     :     :- *Project [c_customer_sk#0, ss_sold_date_sk#0, c_current_addr_sk#0, ss_ext_sales_price#0]
                        :     :     :  +- *BroadcastHashJoin [c_customer_sk#0], [ss_customer_sk#0], Inner, BuildRight
                        :     :     :     :- *HashAggregate(keys=[c_customer_sk#0, c_current_addr_sk#0], functions=[])
                        :     :     :     :  +- Exchange hashpartitioning(c_customer_sk#0, c_current_addr_sk#0, 5)
                        :     :     :     :     +- *HashAggregate(keys=[c_customer_sk#0, c_current_addr_sk#0], functions=[])
                        :     :     :     :        +- *Project [c_customer_sk#0, c_current_addr_sk#0]
                        :     :     :     :           +- *BroadcastHashJoin [customer_sk#0], [c_customer_sk#0], Inner, BuildRight
                        :     :     :     :              :- *Project [customer_sk#0]
                        :     :     :     :              :  +- *BroadcastHashJoin [sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
                        :     :     :     :              :     :- *Project [customer_sk#0, sold_date_sk#0]
                        :     :     :     :              :     :  +- *BroadcastHashJoin [item_sk#0], [i_item_sk#0], Inner, BuildRight
                        :     :     :     :              :     :     :- Union
                        :     :     :     :              :     :     :  :- *Project [cs_sold_date_sk#0 AS none#0, cs_bill_customer_sk#0 AS none#0, cs_item_sk#0 AS none#0]
                        :     :     :     :              :     :     :  :  +- *Filter ((isnotnull(cs_sold_date_sk#0) && isnotnull(cs_bill_customer_sk#0)) && isnotnull(cs_item_sk#0))
                        :     :     :     :              :     :     :  :     +- *FileScan parquet default.catalog_sales[cs_sold_date_sk#0,cs_bill_customer_sk#0,cs_item_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,cs_item_sk:int>
                        :     :     :     :              :     :     :  +- *Project [ws_sold_date_sk#0 AS none#0, ws_bill_customer_sk#0 AS none#0, ws_item_sk#0 AS none#0]
                        :     :     :     :              :     :     :     +- *Filter ((isnotnull(ws_item_sk#0) && isnotnull(ws_sold_date_sk#0)) && isnotnull(ws_bill_customer_sk#0))
                        :     :     :     :              :     :     :        +- *FileScan parquet default.web_sales[ws_sold_date_sk#0,ws_item_sk#0,ws_bill_customer_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ws_bill_customer_sk:int>
                        :     :     :     :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :     :     :     :              :     :        +- *Project [i_item_sk#0]
                        :     :     :     :              :     :           +- *Filter ((((isnotnull(i_item_sk#0) && isnotnull(i_category#0)) && (Women = i_category#0)) && (maternity = i_class#0)) && isnotnull(i_class#0))
                        :     :     :     :              :     :              +- *FileScan parquet default.item[i_item_sk#0,i_class#0,i_category#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,i_category:string>
                        :     :     :     :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :     :     :     :              :        +- *Project [d_date_sk#0]
                        :     :     :     :              :           +- *Filter ((((isnotnull(d_date_sk#0) && isnotnull(d_moy#0)) && isnotnull(d_year#0)) && (d_moy#0 = 12)) && (1998 = d_year#0))
                        :     :     :     :              :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0,d_moy#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_moy:int>
                        :     :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :     :     :     :                 +- *Project [c_current_addr_sk#0, c_customer_sk#0]
                        :     :     :     :                    +- *Filter (isnotnull(c_current_addr_sk#0) && isnotnull(c_customer_sk#0))
                        :     :     :     :                       +- *FileScan parquet default.customer[c_customer_sk#0,c_current_addr_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,c_current_addr_sk:int>
                        :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)))
                        :     :     :        +- *Project [ss_sold_date_sk#0, ss_customer_sk#0, ss_ext_sales_price#0]
                        :     :     :           +- *Filter (isnotnull(ss_customer_sk#0) && isnotnull(ss_sold_date_sk#0))
                        :     :     :              +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_customer_sk#0,ss_ext_sales_price#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,2)>
                        :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :     :        +- *Project [ca_address_sk#0, ca_county#0, ca_state#0]
                        :     :           +- *Filter ((isnotnull(ca_state#0) && isnotnull(ca_address_sk#0)) && isnotnull(ca_county#0))
                        :     :              +- *FileScan parquet default.customer_address[ca_address_sk#0,ca_county#0,ca_state#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ca_state:string>
                        :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true], input[1, string, true]))
                        :        +- *Project [s_county#0, s_state#0]
                        :           +- *Filter (isnotnull(s_state#0) && isnotnull(s_county#0))
                        :              +- *FileScan parquet default.store[s_county#0,s_state#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,s_state:string>
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                           +- *Project [d_date_sk#0]
                              +- *Filter (((isnotnull(d_date_sk#0) && isnotnull(d_month_seq#0)) && (Subquery none <= d_month_seq#0)) && (Subquery none >= d_month_seq#0))
                                 :  :- Subquery none
                                 :  :  +- Subquery none
                                 :  :     +- *HashAggregate(keys=[(d_month_seq + 1)#0], functions=[])
                                 :  :        +- Exchange hashpartitioning((d_month_seq + 1)#0, 5)
                                 :  :           +- *HashAggregate(keys=[(d_month_seq + 1)#0], functions=[])
                                 :  :              +- *Project [(d_month_seq#0 + 1) AS none#0]
                                 :  :                 +- *Filter (((isnotnull(d_moy#0) && isnotnull(d_year#0)) && (d_moy#0 = 12)) && (1998 = d_year#0))
                                 :  :                    +- *FileScan parquet default.date_dim[d_month_seq#0,d_year#0,d_moy#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_moy:int>
                                 :  +- Subquery none
                                 :     +- Subquery none
                                 :        +- *HashAggregate(keys=[(d_month_seq + 3)#0], functions=[])
                                 :           +- Exchange hashpartitioning((d_month_seq + 3)#0, 5)
                                 :              +- *HashAggregate(keys=[(d_month_seq + 3)#0], functions=[])
                                 :                 +- *Project [(d_month_seq#0 + 3) AS none#0]
                                 :                    +- *Filter (((isnotnull(d_moy#0) && isnotnull(d_year#0)) && (d_moy#0 = 12)) && (1998 = d_year#0))
                                 :                       +- *FileScan parquet default.date_dim[d_month_seq#0,d_year#0,d_moy#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_moy:int>
                                 +- *FileScan parquet default.date_dim[d_date_sk#0,d_month_seq#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_month_seq:int>
                                       :- Subquery none
                                       :  +- Subquery none
                                       :     +- *HashAggregate(keys=[(d_month_seq + 1)#0], functions=[])
                                       :        +- Exchange hashpartitioning((d_month_seq + 1)#0, 5)
                                       :           +- *HashAggregate(keys=[(d_month_seq + 1)#0], functions=[])
                                       :              +- *Project [(d_month_seq#0 + 1) AS none#0]
                                       :                 +- *Filter (((isnotnull(d_moy#0) && isnotnull(d_year#0)) && (d_moy#0 = 12)) && (1998 = d_year#0))
                                       :                    +- *FileScan parquet default.date_dim[d_month_seq#0,d_year#0,d_moy#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_moy:int>
                                       +- Subquery none
                                          +- Subquery none
                                             +- *HashAggregate(keys=[(d_month_seq + 3)#0], functions=[])
                                                +- Exchange hashpartitioning((d_month_seq + 3)#0, 5)
                                                   +- *HashAggregate(keys=[(d_month_seq + 3)#0], functions=[])
                                                      +- *Project [(d_month_seq#0 + 3) AS none#0]
                                                         +- *Filter (((isnotnull(d_moy#0) && isnotnull(d_year#0)) && (d_moy#0 = 12)) && (1998 = d_year#0))
                                                            +- *FileScan parquet default.date_dim[d_month_seq#0,d_year#0,d_moy#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_moy:int>
