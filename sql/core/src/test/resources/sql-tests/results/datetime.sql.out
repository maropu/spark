-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 31


-- !query 0
select current_date = current_date(), current_timestamp = current_timestamp()
-- !query 0 schema
struct<(current_date() = current_date()):boolean,(current_timestamp() = current_timestamp()):boolean>
-- !query 0 output
true	true


-- !query 1
select to_date(null), to_date('2016-12-31'), to_date('2016-12-31', 'yyyy-MM-dd')
-- !query 1 schema
struct<to_date(NULL):date,to_date('2016-12-31'):date,to_date('2016-12-31', 'yyyy-MM-dd'):date>
-- !query 1 output
NULL	2016-12-31	2016-12-31


-- !query 2
select to_timestamp(null), to_timestamp('2016-12-31 00:12:00'), to_timestamp('2016-12-31', 'yyyy-MM-dd')
-- !query 2 schema
struct<to_timestamp(NULL):timestamp,to_timestamp('2016-12-31 00:12:00'):timestamp,to_timestamp('2016-12-31', 'yyyy-MM-dd'):timestamp>
-- !query 2 output
NULL	2016-12-31 00:12:00	2016-12-31 00:00:00


-- !query 3
select dayofweek('2007-02-03'), dayofweek('2009-07-30'), dayofweek('2017-05-27'), dayofweek(null), dayofweek('1582-10-15 13:10:15')
-- !query 3 schema
struct<dayofweek(CAST(2007-02-03 AS DATE)):int,dayofweek(CAST(2009-07-30 AS DATE)):int,dayofweek(CAST(2017-05-27 AS DATE)):int,dayofweek(CAST(NULL AS DATE)):int,dayofweek(CAST(1582-10-15 13:10:15 AS DATE)):int>
-- !query 3 output
7	5	7	NULL	6


-- !query 4
create temporary view ttf1 as select * from values
  (1, 2),
  (2, 3)
  as ttf1(current_date, current_timestamp)
-- !query 4 schema
struct<>
-- !query 4 output



-- !query 5
select current_date, current_timestamp from ttf1
-- !query 5 schema
struct<current_date:int,current_timestamp:int>
-- !query 5 output
1	2
2	3


-- !query 6
create temporary view ttf2 as select * from values
  (1, 2),
  (2, 3)
  as ttf2(a, b)
-- !query 6 schema
struct<>
-- !query 6 output



-- !query 7
select current_date = current_date(), current_timestamp = current_timestamp(), a, b from ttf2
-- !query 7 schema
struct<(current_date() = current_date()):boolean,(current_timestamp() = current_timestamp()):boolean,a:int,b:int>
-- !query 7 output
true	true	1	2
true	true	2	3


-- !query 8
select a, b from ttf2 order by a, current_date
-- !query 8 schema
struct<a:int,b:int>
-- !query 8 output
1	2
2	3


-- !query 9
select weekday('2007-02-03'), weekday('2009-07-30'), weekday('2017-05-27'), weekday(null), weekday('1582-10-15 13:10:15')
-- !query 9 schema
struct<weekday(CAST(2007-02-03 AS DATE)):int,weekday(CAST(2009-07-30 AS DATE)):int,weekday(CAST(2017-05-27 AS DATE)):int,weekday(CAST(NULL AS DATE)):int,weekday(CAST(1582-10-15 13:10:15 AS DATE)):int>
-- !query 9 output
5	3	5	NULL	4


-- !query 10
select year('1500-01-01'), month('1500-01-01'), dayOfYear('1500-01-01')
-- !query 10 schema
struct<year(CAST(1500-01-01 AS DATE)):int,month(CAST(1500-01-01 AS DATE)):int,dayofyear(CAST(1500-01-01 AS DATE)):int>
-- !query 10 output
1500	1	1


-- !query 11
select date '2001-09-28' + 7
-- !query 11 schema
struct<date_add(DATE '2001-09-28', 7):date>
-- !query 11 output
2001-10-05


-- !query 12
select 7 + date '2001-09-28'
-- !query 12 schema
struct<date_add(DATE '2001-09-28', 7):date>
-- !query 12 output
2001-10-05


-- !query 13
select date '2001-10-01' - 7
-- !query 13 schema
struct<date_sub(DATE '2001-10-01', 7):date>
-- !query 13 output
2001-09-24


-- !query 14
select date '2001-10-01' - date '2001-09-28'
-- !query 14 schema
struct<subtractdates(DATE '2001-10-01', DATE '2001-09-28'):interval>
-- !query 14 output
3 days


-- !query 15
select date'2020-01-01' - timestamp'2019-10-06 10:11:12.345678'
-- !query 15 schema
struct<subtracttimestamps(CAST(DATE '2020-01-01' AS TIMESTAMP), TIMESTAMP '2019-10-06 10:11:12.345678'):interval>
-- !query 15 output
2078 hours 48 minutes 47.654322 seconds


-- !query 16
select timestamp'2019-10-06 10:11:12.345678' - date'2020-01-01'
-- !query 16 schema
struct<subtracttimestamps(TIMESTAMP '2019-10-06 10:11:12.345678', CAST(DATE '2020-01-01' AS TIMESTAMP)):interval>
-- !query 16 output
-2078 hours -48 minutes -47.654322 seconds


-- !query 17
select date '2019-01-01\t'
-- !query 17 schema
struct<DATE '2019-01-01':date>
-- !query 17 output
2019-01-01


-- !query 18
select timestamp '2019-01-01\t'
-- !query 18 schema
struct<TIMESTAMP '2019-01-01 00:00:00':timestamp>
-- !query 18 output
2019-01-01 00:00:00


-- !query 19
create or replace temporary view tmp_dates as select * from values
 ('2011-11-11', '2011-11-11', '2011-11-11', '2011-11-11', 1),
 ('2011-11-10', '2011-11-11', '2011-11-11', '2011-11-12', 2),
 ('2011-11-11', '2011-11-10', '2011-11-11', '2011-11-12', 3),
 ('2011-11-11', '2011-11-10', '2011-11-12', '2011-11-11', 4),
 ('2011-11-10', '2011-11-11', '2011-11-12', '2011-11-13', 5),
 ('2011-11-10', '2011-11-20', '2011-11-11', '2011-11-19', 6),
 ('2011-11-11', '2011-11-19', '2011-11-10', '2011-11-20', 7),
 ('2011-11-11', '2011-11-19', '2011-11-10', null, 8) t(a, b, c, d, e)
-- !query 19 schema
struct<>
-- !query 19 output



-- !query 20
select (cast(a as date), cast(b as date)) overlaps (cast(c as date), cast(d as date)), e from tmp_dates order by e
-- !query 20 schema
struct<(CAST(CAST(a AS DATE) AS TIMESTAMP), CAST(CAST(b AS DATE) AS TIMESTAMP)) OVERLAPS (CAST(CAST(c AS DATE) AS TIMESTAMP), CAST(CAST(d AS DATE) AS TIMESTAMP)):boolean,e:int>
-- !query 20 output
true	1
false	2
false	3
false	4
false	5
true	6
true	7
NULL	8


-- !query 21
select (cast(a as timestamp), cast(b as timestamp)) overlaps (cast(c as timestamp), cast(d as timestamp)), e from tmp_dates order by e
-- !query 21 schema
struct<(CAST(a AS TIMESTAMP), CAST(b AS TIMESTAMP)) OVERLAPS (CAST(c AS TIMESTAMP), CAST(d AS TIMESTAMP)):boolean,e:int>
-- !query 21 output
true	1
false	2
false	3
false	4
false	5
true	6
true	7
NULL	8


-- !query 22
select (cast(a as timestamp), cast(b as date)) overlaps (cast(c as date), cast(d as timestamp)), e from tmp_dates order by e
-- !query 22 schema
struct<(CAST(a AS TIMESTAMP), CAST(CAST(b AS DATE) AS TIMESTAMP)) OVERLAPS (CAST(CAST(c AS DATE) AS TIMESTAMP), CAST(d AS TIMESTAMP)):boolean,e:int>
-- !query 22 output
true	1
false	2
false	3
false	4
false	5
true	6
true	7
NULL	8


-- !query 23
select e from tmp_dates where (cast(a as timestamp), cast(b as date)) overlaps (cast(c as date), cast(d as timestamp)) order by e
-- !query 23 schema
struct<e:int>
-- !query 23 output
1
6
7


-- !query 24
select (cast(a as date), b) overlaps (c, d) from tmp_dates
-- !query 24 schema
struct<>
-- !query 24 output
org.apache.spark.sql.AnalysisException
cannot resolve '(CAST(CAST(tmp_dates.`a` AS DATE) AS TIMESTAMP), tmp_dates.`b`) OVERLAPS (tmp_dates.`c`, tmp_dates.`d`)' due to data type mismatch: argument 2 requires timestamp type, however, 'tmp_dates.`b`' is of string type. argument 3 requires timestamp type, however, 'tmp_dates.`c`' is of string type. argument 4 requires timestamp type, however, 'tmp_dates.`d`' is of string type.; line 1 pos 7


-- !query 25
create or replace temporary view tmp_dates_with_interval as select * from values
 ('2011-11-11', '0 day', '2011-11-11', '0 day', 1),
 ('2011-11-10', '1 day', '2011-11-11', '1 day', 2),
 ('2011-11-11', '-1 day', '2011-11-11', '1 day', 3),
 ('2011-11-11', '-1 day', '2011-11-12', '-1 day', 4),
 ('2011-11-10', '1 day', '2011-11-12', '1 day', 5),
 ('2011-11-10', '10 day', '2011-11-11', '8 day', 6),
 ('2011-11-11', '8 day', '2011-11-10', '10 day', 7),
 ('2011-11-11', '8 day', '2011-11-10', null, 8) t(a, b, c, d, e)
-- !query 25 schema
struct<>
-- !query 25 output



-- !query 26
select (cast(a as date), cast(b as interval)) overlaps (cast(c as date), cast(d as interval)), e from tmp_dates_with_interval order by e
-- !query 26 schema
struct<(CAST(CAST(a AS DATE) AS TIMESTAMP), CAST(CAST(CAST(a AS DATE) AS TIMESTAMP) + CAST(b AS INTERVAL) AS TIMESTAMP)) OVERLAPS (CAST(CAST(c AS DATE) AS TIMESTAMP), CAST(CAST(CAST(c AS DATE) AS TIMESTAMP) + CAST(d AS INTERVAL) AS TIMESTAMP)):boolean,e:int>
-- !query 26 output
true	1
false	2
false	3
false	4
false	5
true	6
true	7
NULL	8


-- !query 27
select (cast(a as timestamp), cast(b as interval)) overlaps (cast(c as timestamp), cast(d as interval)), e from tmp_dates_with_interval order by e
-- !query 27 schema
struct<(CAST(a AS TIMESTAMP), CAST(CAST(a AS TIMESTAMP) + CAST(b AS INTERVAL) AS TIMESTAMP)) OVERLAPS (CAST(c AS TIMESTAMP), CAST(CAST(c AS TIMESTAMP) + CAST(d AS INTERVAL) AS TIMESTAMP)):boolean,e:int>
-- !query 27 output
true	1
false	2
false	3
false	4
false	5
true	6
true	7
NULL	8


-- !query 28
select (cast(a as timestamp), cast(b as interval)) overlaps (cast(c as date), cast(d as interval)), e from tmp_dates_with_interval order by e
-- !query 28 schema
struct<(CAST(a AS TIMESTAMP), CAST(CAST(a AS TIMESTAMP) + CAST(b AS INTERVAL) AS TIMESTAMP)) OVERLAPS (CAST(CAST(c AS DATE) AS TIMESTAMP), CAST(CAST(CAST(c AS DATE) AS TIMESTAMP) + CAST(d AS INTERVAL) AS TIMESTAMP)):boolean,e:int>
-- !query 28 output
true	1
false	2
false	3
false	4
false	5
true	6
true	7
NULL	8


-- !query 29
select e from tmp_dates_with_interval where (cast(a as timestamp), cast(b as interval)) overlaps (cast(c as date), cast(d as interval)) order by e
-- !query 29 schema
struct<e:int>
-- !query 29 output
1
6
7


-- !query 30
select (a, b) overlaps (c, d) from tmp_dates_with_interval
-- !query 30 schema
struct<>
-- !query 30 output
org.apache.spark.sql.AnalysisException
cannot resolve '(tmp_dates_with_interval.`a`, tmp_dates_with_interval.`b`) OVERLAPS (tmp_dates_with_interval.`c`, tmp_dates_with_interval.`d`)' due to data type mismatch: argument 1 requires timestamp type, however, 'tmp_dates_with_interval.`a`' is of string type. argument 2 requires timestamp type, however, 'tmp_dates_with_interval.`b`' is of string type. argument 3 requires timestamp type, however, 'tmp_dates_with_interval.`c`' is of string type. argument 4 requires timestamp type, however, 'tmp_dates_with_interval.`d`' is of string type.; line 1 pos 7
