TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#0 ASC NULLS FIRST,c_salutation#0 ASC NULLS FIRST,c_first_name#0 ASC NULLS FIRST,c_last_name#0 ASC NULLS FIRST,c_preferred_cust_flag#0 ASC NULLS FIRST,c_birth_day#0 ASC NULLS FIRST,c_birth_month#0 ASC NULLS FIRST,c_birth_year#0 ASC NULLS FIRST,c_birth_country#0 ASC NULLS FIRST,c_login#0 ASC NULLS FIRST,c_email_address#0 ASC NULLS FIRST,c_last_review_date#0 ASC NULLS FIRST,ctr_total_return#0 ASC NULLS FIRST], output=[c_customer_id#0,c_salutation#0,c_first_name#0,c_last_name#0,c_preferred_cust_flag#0,c_birth_day#0,c_birth_month#0,c_birth_year#0,c_birth_country#0,c_login#0,c_email_address#0,c_last_review_date#0,ctr_total_return#0])
+- *Project [c_login#0, c_last_name#0, c_birth_month#0, c_birth_day#0, c_email_address#0, c_customer_id#0, c_birth_year#0, c_preferred_cust_flag#0, c_birth_country#0, c_salutation#0, ctr_total_return#0, c_first_name#0, c_last_review_date#0]
   +- *BroadcastHashJoin [c_current_addr_sk#0], [ca_address_sk#0], Inner, BuildRight
      :- *Project [c_current_addr_sk#0, c_first_name#0, c_last_review_date#0, c_login#0, c_last_name#0, c_birth_month#0, c_birth_day#0, c_email_address#0, c_customer_id#0, c_birth_year#0, c_preferred_cust_flag#0, ctr_total_return#0, c_birth_country#0, c_salutation#0]
      :  +- *BroadcastHashJoin [ctr_customer_sk#0L], [cast(c_customer_sk#0 as bigint)], Inner, BuildRight
      :     :- *Project [ctr_customer_sk#0L, ctr_total_return#0]
      :     :  +- *BroadcastHashJoin [ctr_state#0], [ctr_state#0#0], Inner, BuildRight, (cast(ctr_total_return#0 as decimal(24,7)) > (CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#0)
      :     :     :- *Filter isnotnull(ctr_total_return#0)
      :     :     :  +- *HashAggregate(keys=[wr_returning_customer_sk#0L, ca_state#0], functions=[sum(UnscaledValue(wr_return_amt#0))])
      :     :     :     +- Exchange hashpartitioning(wr_returning_customer_sk#0L, ca_state#0, 5)
      :     :     :        +- *HashAggregate(keys=[wr_returning_customer_sk#0L, ca_state#0], functions=[partial_sum(UnscaledValue(wr_return_amt#0))])
      :     :     :           +- *Project [wr_returning_customer_sk#0L, wr_return_amt#0, ca_state#0]
      :     :     :              +- *BroadcastHashJoin [wr_returning_addr_sk#0L], [cast(ca_address_sk#0 as bigint)], Inner, BuildRight
      :     :     :                 :- *Project [wr_returning_addr_sk#0L, wr_returning_customer_sk#0L, wr_return_amt#0]
      :     :     :                 :  +- *BroadcastHashJoin [wr_returned_date_sk#0L], [cast(d_date_sk#0 as bigint)], Inner, BuildRight
      :     :     :                 :     :- *Project [wr_returning_addr_sk#0L, wr_returning_customer_sk#0L, wr_returned_date_sk#0L, wr_return_amt#0]
      :     :     :                 :     :  +- *Filter ((isnotnull(wr_returning_addr_sk#0L) && isnotnull(wr_returning_customer_sk#0L)) && isnotnull(wr_returned_date_sk#0L))
      :     :     :                 :     :     +- *FileScan parquet default.web_returns[wr_returned_date_sk#0L,wr_returning_customer_sk#0L,wr_returning_addr_sk#0L,wr_return_amt#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,wr_...
      :     :     :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :     :                 :        +- *Project [d_date_sk#0]
      :     :     :                 :           +- *Filter ((isnotnull(d_date_sk#0) && isnotnull(d_year#0)) && (2002 = d_year#0))
      :     :     :                 :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_year:int>
      :     :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :     :                    +- *Project [ca_address_sk#0, ca_state#0]
      :     :     :                       +- *Filter (isnotnull(ca_state#0) && isnotnull(ca_address_sk#0))
      :     :     :                          +- *FileScan parquet default.customer_address[ca_address_sk#0,ca_state#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ca_state:string>
      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true]))
      :     :        +- *Filter isnotnull((CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#0)
      :     :           +- *HashAggregate(keys=[ctr_state#0], functions=[avg(ctr_total_return#0)])
      :     :              +- Exchange hashpartitioning(ctr_state#0, 5)
      :     :                 +- *HashAggregate(keys=[ctr_state#0], functions=[partial_avg(ctr_total_return#0)])
      :     :                    +- *HashAggregate(keys=[wr_returning_customer_sk#0L, ca_state#0], functions=[sum(UnscaledValue(wr_return_amt#0))])
      :     :                       +- Exchange hashpartitioning(wr_returning_customer_sk#0L, ca_state#0, 5)
      :     :                          +- *HashAggregate(keys=[wr_returning_customer_sk#0L, ca_state#0], functions=[partial_sum(UnscaledValue(wr_return_amt#0))])
      :     :                             +- *Project [wr_returning_customer_sk#0L, wr_return_amt#0, ca_state#0]
      :     :                                +- *BroadcastHashJoin [wr_returning_addr_sk#0L], [cast(ca_address_sk#0 as bigint)], Inner, BuildRight
      :     :                                   :- *Project [wr_returning_addr_sk#0L, wr_returning_customer_sk#0L, wr_return_amt#0]
      :     :                                   :  +- *BroadcastHashJoin [wr_returned_date_sk#0L], [cast(d_date_sk#0 as bigint)], Inner, BuildRight
      :     :                                   :     :- *Project [wr_returning_addr_sk#0L, wr_returning_customer_sk#0L, wr_returned_date_sk#0L, wr_return_amt#0]
      :     :                                   :     :  +- *Filter (isnotnull(wr_returning_addr_sk#0L) && isnotnull(wr_returned_date_sk#0L))
      :     :                                   :     :     +- *FileScan parquet default.web_returns[wr_returned_date_sk#0L,wr_returning_customer_sk#0L,wr_returning_addr_sk#0L,wr_return_amt#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,wr_...
      :     :                                   :     +- ReusedExchange [d_date_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :                                   +- ReusedExchange [ca_address_sk#0, ca_state#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :        +- *Project [c_current_addr_sk#0, c_first_name#0, c_last_review_date#0, c_login#0, c_last_name#0, c_birth_month#0, c_customer_sk#0, c_birth_day#0, c_email_address#0, c_customer_id#0, c_birth_year#0, c_preferred_cust_flag#0, c_birth_country#0, c_salutation#0]
      :           +- *Filter (isnotnull(c_current_addr_sk#0) && isnotnull(c_customer_sk#0))
      :              +- *FileScan parquet default.customer[c_customer_sk#0,c_customer_id#0,c_current_addr_sk#0,c_salutation#0,c_first_name#0,c_last_name#0,c_preferred_cust_flag#0,c_birth_day#0,c_birth_month#0,c_birth_year#0,c_birth_country#0,c_login#0,c_email_address#0,c_last_review_date#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,c_first_n...
      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         +- *Project [ca_address_sk#0]
            +- *Filter (((GA = ca_state#0) && isnotnull(ca_state#0)) && isnotnull(ca_address_sk#0))
               +- *FileScan parquet default.customer_address[ca_address_sk#0,ca_state#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ca_state:string>
