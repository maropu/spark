TakeOrderedAndProject(limit=100, orderBy=[i_category#0 ASC NULLS FIRST,i_class#0 ASC NULLS FIRST,i_brand#0 ASC NULLS FIRST,i_product_name#0 ASC NULLS FIRST,d_year#0 ASC NULLS FIRST,d_qoy#0 ASC NULLS FIRST,d_moy#0 ASC NULLS FIRST,s_store_id#0 ASC NULLS FIRST,sumsales#0 ASC NULLS FIRST,rk#0 ASC NULLS FIRST], output=[i_category#0,i_class#0,i_brand#0,i_product_name#0,d_year#0,d_qoy#0,d_moy#0,s_store_id#0,sumsales#0,rk#0])
+- *Filter (isnotnull(rk#0) && (100 >= rk#0))
   +- Window [rank(sumsales#0) windowspecdefinition(i_category#0, sumsales#0 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS none#0], [i_category#0], [sumsales#0 DESC NULLS LAST]
      +- *Sort [i_category#0 ASC NULLS FIRST, sumsales#0 DESC NULLS LAST], false, 0
         +- Exchange hashpartitioning(i_category#0, 5)
            +- *HashAggregate(keys=[i_category#0, i_class#0, i_brand#0, i_product_name#0, d_year#0, d_qoy#0, d_moy#0, s_store_id#0, spark_grouping_id#0], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#0 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#0 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)), 0.00))])
               +- Exchange hashpartitioning(i_category#0, i_class#0, i_brand#0, i_product_name#0, d_year#0, d_qoy#0, d_moy#0, s_store_id#0, spark_grouping_id#0, 5)
                  +- *HashAggregate(keys=[i_category#0, i_class#0, i_brand#0, i_product_name#0, d_year#0, d_qoy#0, d_moy#0, s_store_id#0, spark_grouping_id#0], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#0 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#0 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2)), 0.00))])
                     +- *Expand [List(ss_quantity#0, ss_sales_price#0, i_category#0, i_class#0, i_brand#0, i_product_name#0, d_year#0, d_qoy#0, d_moy#0, s_store_id#0, 0), List(ss_quantity#0, ss_sales_price#0, i_category#0, i_class#0, i_brand#0, i_product_name#0, d_year#0, d_qoy#0, d_moy#0, null, 1), List(ss_quantity#0, ss_sales_price#0, i_category#0, i_class#0, i_brand#0, i_product_name#0, d_year#0, d_qoy#0, null, null, 3), List(ss_quantity#0, ss_sales_price#0, i_category#0, i_class#0, i_brand#0, i_product_name#0, d_year#0, null, null, null, 7), List(ss_quantity#0, ss_sales_price#0, i_category#0, i_class#0, i_brand#0, i_product_name#0, null, null, null, null, 15), List(ss_quantity#0, ss_sales_price#0, i_category#0, i_class#0, i_brand#0, null, null, null, null, null, 31), List(ss_quantity#0, ss_sales_price#0, i_category#0, i_class#0, null, null, null, null, null, null, 63), List(ss_quantity#0, ss_sales_price#0, i_category#0, null, null, null, null, null, null, null, 127), List(ss_quantity#0, ss_sales_price#0, null, null, null, null, null, null, null, null, 255)], [ss_quantity#0, ss_sales_price#0, i_category#0, i_class#0, i_brand#0, i_product_name#0, d_year#0, d_qoy#0, d_moy#0, s_store_id#0, spark_grouping_id#0]
                        +- *Project [s_store_id#0, s_store_id#0, d_moy#0, d_moy#0, i_category#0, i_category#0, d_qoy#0, d_qoy#0, ss_sales_price#0, i_product_name#0, i_product_name#0, i_brand#0, i_brand#0, ss_quantity#0, d_year#0, d_year#0, i_class#0, i_class#0]
                           +- *BroadcastHashJoin [ss_item_sk#0], [i_item_sk#0], Inner, BuildRight
                              :- *Project [ss_sales_price#0, ss_quantity#0, d_year#0, s_store_id#0, ss_item_sk#0, d_moy#0, d_qoy#0]
                              :  +- *BroadcastHashJoin [ss_store_sk#0], [s_store_sk#0], Inner, BuildRight
                              :     :- *Project [ss_sales_price#0, ss_quantity#0, d_year#0, ss_item_sk#0, d_moy#0, ss_store_sk#0, d_qoy#0]
                              :     :  +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
                              :     :     :- *Project [ss_sales_price#0, ss_quantity#0, ss_item_sk#0, ss_store_sk#0, ss_sold_date_sk#0]
                              :     :     :  +- *Filter ((isnotnull(ss_item_sk#0) && isnotnull(ss_store_sk#0)) && isnotnull(ss_sold_date_sk#0))
                              :     :     :     +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_item_sk#0,ss_store_sk#0,ss_quantity#0,ss_sales_price#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ss_sales_price:decimal(...
                              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                              :     :        +- *Project [d_date_sk#0, d_year#0, d_moy#0, d_qoy#0]
                              :     :           +- *Filter (((isnotnull(d_date_sk#0) && (1211 >= d_month_seq#0)) && isnotnull(d_month_seq#0)) && (1200 <= d_month_seq#0))
                              :     :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_month_seq#0,d_year#0,d_moy#0,d_qoy#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_qoy:int>
                              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                              :        +- *Project [s_store_id#0, s_store_sk#0]
                              :           +- *Filter isnotnull(s_store_sk#0)
                              :              +- *FileScan parquet default.store[s_store_sk#0,s_store_id#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,s_store_id:string>
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                                 +- *Project [i_product_name#0, i_brand#0, i_item_sk#0, i_class#0, i_category#0]
                                    +- *Filter isnotnull(i_item_sk#0)
                                       +- *FileScan parquet default.item[i_item_sk#0,i_brand#0,i_class#0,i_category#0,i_product_name#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,i_product_name:string>
