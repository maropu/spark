== Physical Plan ==
TakeOrderedAndProject (48)
+- * HashAggregate (47)
   +- Exchange (46)
      +- * HashAggregate (45)
         +- * Project (44)
            +- BroadcastNestedLoopJoin LeftSemi BuildRight (43)
               :- * Project (28)
               :  +- * BroadcastHashJoin Inner BuildRight (27)
               :     :- * Project (22)
               :     :  +- * BroadcastHashJoin Inner BuildRight (21)
               :     :     :- * BroadcastHashJoin LeftSemi BuildRight (15)
               :     :     :  :- * Filter (3)
               :     :     :  :  +- * ColumnarToRow (2)
               :     :     :  :     +- Scan parquet default.customer (1)
               :     :     :  +- BroadcastExchange (14)
               :     :     :     +- * Project (13)
               :     :     :        +- * BroadcastHashJoin Inner BuildRight (12)
               :     :     :           :- * Filter (6)
               :     :     :           :  +- * ColumnarToRow (5)
               :     :     :           :     +- Scan parquet default.store_sales (4)
               :     :     :           +- BroadcastExchange (11)
               :     :     :              +- * Project (10)
               :     :     :                 +- * Filter (9)
               :     :     :                    +- * ColumnarToRow (8)
               :     :     :                       +- Scan parquet default.date_dim (7)
               :     :     +- BroadcastExchange (20)
               :     :        +- * Project (19)
               :     :           +- * Filter (18)
               :     :              +- * ColumnarToRow (17)
               :     :                 +- Scan parquet default.customer_address (16)
               :     +- BroadcastExchange (26)
               :        +- * Filter (25)
               :           +- * ColumnarToRow (24)
               :              +- Scan parquet default.customer_demographics (23)
               +- BroadcastExchange (42)
                  +- Union (41)
                     :- * Project (34)
                     :  +- * BroadcastHashJoin Inner BuildRight (33)
                     :     :- * Filter (31)
                     :     :  +- * ColumnarToRow (30)
                     :     :     +- Scan parquet default.web_sales (29)
                     :     +- ReusedExchange (32)
                     +- * Project (40)
                        +- * BroadcastHashJoin Inner BuildRight (39)
                           :- * Filter (37)
                           :  +- * ColumnarToRow (36)
                           :     +- Scan parquet default.catalog_sales (35)
                           +- ReusedExchange (38)


(1) Scan parquet default.customer
Output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>

(2) ColumnarToRow [codegen id : 5]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]

(3) Filter [codegen id : 5]
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Condition : (isnotnull(c_current_addr_sk#3) AND isnotnull(c_current_cdemo_sk#2))

(4) Scan parquet default.store_sales
Output [2]: [ss_sold_date_sk#4, ss_customer_sk#5]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_sold_date_sk)]
ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int>

(5) ColumnarToRow [codegen id : 2]
Input [2]: [ss_sold_date_sk#4, ss_customer_sk#5]

(6) Filter [codegen id : 2]
Input [2]: [ss_sold_date_sk#4, ss_customer_sk#5]
Condition : isnotnull(ss_sold_date_sk#4)

(7) Scan parquet default.date_dim
Output [3]: [d_date_sk#6, d_year#7, d_moy#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,7), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(8) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]

(9) Filter [codegen id : 1]
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Condition : (((((isnotnull(d_year#7) AND isnotnull(d_moy#8)) AND (d_year#7 = 2002)) AND (d_moy#8 >= 4)) AND (d_moy#8 <= 7)) AND isnotnull(d_date_sk#6))

(10) Project [codegen id : 1]
Output [1]: [d_date_sk#6]
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]

(11) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#9]

(12) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [ss_sold_date_sk#4]
Right keys [1]: [d_date_sk#6]
Join condition: None

(13) Project [codegen id : 2]
Output [1]: [ss_customer_sk#5]
Input [3]: [ss_sold_date_sk#4, ss_customer_sk#5, d_date_sk#6]

(14) BroadcastExchange
Input [1]: [ss_customer_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#10]

(15) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [c_customer_sk#1]
Right keys [1]: [ss_customer_sk#5]
Join condition: None

(16) Scan parquet default.customer_address
Output [2]: [ca_address_sk#11, ca_county#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [In(ca_county, [Walker County,Richland County,Gaines County,Douglas County,Dona Ana County]), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_county:string>

(17) ColumnarToRow [codegen id : 3]
Input [2]: [ca_address_sk#11, ca_county#12]

(18) Filter [codegen id : 3]
Input [2]: [ca_address_sk#11, ca_county#12]
Condition : (ca_county#12 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#11))

(19) Project [codegen id : 3]
Output [1]: [ca_address_sk#11]
Input [2]: [ca_address_sk#11, ca_county#12]

(20) BroadcastExchange
Input [1]: [ca_address_sk#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#13]

(21) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [c_current_addr_sk#3]
Right keys [1]: [ca_address_sk#11]
Join condition: None

(22) Project [codegen id : 5]
Output [2]: [c_customer_sk#1, c_current_cdemo_sk#2]
Input [4]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3, ca_address_sk#11]

(23) Scan parquet default.customer_demographics
Output [9]: [cd_demo_sk#14, cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_purchase_estimate:int,cd_credit_rating:string,cd_dep_count:int,cd_dep_employed_count:int,cd_dep_college_count:int>

(24) ColumnarToRow [codegen id : 4]
Input [9]: [cd_demo_sk#14, cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22]

(25) Filter [codegen id : 4]
Input [9]: [cd_demo_sk#14, cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22]
Condition : isnotnull(cd_demo_sk#14)

(26) BroadcastExchange
Input [9]: [cd_demo_sk#14, cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#23]

(27) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [c_current_cdemo_sk#2]
Right keys [1]: [cd_demo_sk#14]
Join condition: None

(28) Project [codegen id : 5]
Output [9]: [c_customer_sk#1, cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22]
Input [11]: [c_customer_sk#1, c_current_cdemo_sk#2, cd_demo_sk#14, cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22]

(29) Scan parquet default.web_sales
Output [1]: [ws_sold_date_sk#24]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_sales]
PushedFilters: [IsNotNull(ws_sold_date_sk)]
ReadSchema: struct<ws_sold_date_sk:int>

(30) ColumnarToRow [codegen id : 7]
Input [1]: [ws_sold_date_sk#24]

(31) Filter [codegen id : 7]
Input [1]: [ws_sold_date_sk#24]
Condition : isnotnull(ws_sold_date_sk#24)

(32) ReusedExchange [Reuses operator id: 11]
Output [1]: [d_date_sk#6]

(33) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [ws_sold_date_sk#24]
Right keys [1]: [d_date_sk#6]
Join condition: None

(34) Project [codegen id : 7]
Output: []
Input [2]: [ws_sold_date_sk#24, d_date_sk#6]

(35) Scan parquet default.catalog_sales
Output [1]: [cs_sold_date_sk#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PushedFilters: [IsNotNull(cs_sold_date_sk)]
ReadSchema: struct<cs_sold_date_sk:int>

(36) ColumnarToRow [codegen id : 9]
Input [1]: [cs_sold_date_sk#25]

(37) Filter [codegen id : 9]
Input [1]: [cs_sold_date_sk#25]
Condition : isnotnull(cs_sold_date_sk#25)

(38) ReusedExchange [Reuses operator id: 11]
Output [1]: [d_date_sk#6]

(39) BroadcastHashJoin [codegen id : 9]
Left keys [1]: [cs_sold_date_sk#25]
Right keys [1]: [d_date_sk#6]
Join condition: None

(40) Project [codegen id : 9]
Output: []
Input [2]: [cs_sold_date_sk#25, d_date_sk#6]

(41) Union

(42) BroadcastExchange
Input: []
Arguments: IdentityBroadcastMode, [id=#26]

(43) BroadcastNestedLoopJoin
Join condition: (c_customer_sk#1 = customer_sk#27)

(44) Project [codegen id : 10]
Output [8]: [cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22]
Input [9]: [c_customer_sk#1, cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22]

(45) HashAggregate [codegen id : 10]
Input [8]: [cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22]
Keys [8]: [cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#28]
Results [9]: [cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22, count#29]

(46) Exchange
Input [9]: [cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22, count#29]
Arguments: hashpartitioning(cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22, 5), true, [id=#30]

(47) HashAggregate [codegen id : 11]
Input [9]: [cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22, count#29]
Keys [8]: [cd_gender#15, cd_marital_status#16, cd_education_status#17, cd_purchase_estimate#18, cd_credit_rating#19, cd_dep_count#20, cd_dep_employed_count#21, cd_dep_college_count#22]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#31]
Results [14]: [cd_gender#15, cd_marital_status#16, cd_education_status#17, count(1)#31 AS cnt1#32, cd_purchase_estimate#18, count(1)#31 AS cnt2#33, cd_credit_rating#19, count(1)#31 AS cnt3#34, cd_dep_count#20, count(1)#31 AS cnt4#35, cd_dep_employed_count#21, count(1)#31 AS cnt5#36, cd_dep_college_count#22, count(1)#31 AS cnt6#37]

(48) TakeOrderedAndProject
Input [14]: [cd_gender#15, cd_marital_status#16, cd_education_status#17, cnt1#32, cd_purchase_estimate#18, cnt2#33, cd_credit_rating#19, cnt3#34, cd_dep_count#20, cnt4#35, cd_dep_employed_count#21, cnt5#36, cd_dep_college_count#22, cnt6#37]
Arguments: 100, [cd_gender#15 ASC NULLS FIRST, cd_marital_status#16 ASC NULLS FIRST, cd_education_status#17 ASC NULLS FIRST, cd_purchase_estimate#18 ASC NULLS FIRST, cd_credit_rating#19 ASC NULLS FIRST, cd_dep_count#20 ASC NULLS FIRST, cd_dep_employed_count#21 ASC NULLS FIRST, cd_dep_college_count#22 ASC NULLS FIRST], [cd_gender#15, cd_marital_status#16, cd_education_status#17, cnt1#32, cd_purchase_estimate#18, cnt2#33, cd_credit_rating#19, cnt3#34, cd_dep_count#20, cnt4#35, cd_dep_employed_count#21, cnt5#36, cd_dep_college_count#22, cnt6#37]

