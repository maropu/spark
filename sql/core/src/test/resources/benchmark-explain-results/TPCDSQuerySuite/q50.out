TakeOrderedAndProject(limit=100, orderBy=[s_store_name#0 ASC NULLS FIRST,s_company_id#0 ASC NULLS FIRST,s_street_number#0 ASC NULLS FIRST,s_street_name#0 ASC NULLS FIRST,s_street_type#0 ASC NULLS FIRST,s_suite_number#0 ASC NULLS FIRST,s_city#0 ASC NULLS FIRST,s_county#0 ASC NULLS FIRST,s_state#0 ASC NULLS FIRST,s_zip#0 ASC NULLS FIRST], output=[s_store_name#0,s_company_id#0,s_street_number#0,s_street_name#0,s_street_type#0,s_suite_number#0,s_city#0,s_county#0,s_state#0,s_zip#0,30 days #0L,31 - 60 days #0L,61 - 90 days #0L,91 - 120 days #0L,>120 days #0L])
+- *HashAggregate(keys=[s_store_name#0, s_company_id#0, s_street_number#0, s_street_name#0, s_street_type#0, s_suite_number#0, s_city#0, s_county#0, s_state#0, s_zip#0], functions=[sum(cast(CASE WHEN ((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) <= 30) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) > 30) && ((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) <= 60)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) > 60) && ((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) <= 90)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) > 90) && ((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) <= 120)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN ((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) > 120) THEN 1 ELSE 0 END as bigint))])
   +- Exchange hashpartitioning(s_store_name#0, s_company_id#0, s_street_number#0, s_street_name#0, s_street_type#0, s_suite_number#0, s_city#0, s_county#0, s_state#0, s_zip#0, 5)
      +- *HashAggregate(keys=[s_store_name#0, s_company_id#0, s_street_number#0, s_street_name#0, s_street_type#0, s_suite_number#0, s_city#0, s_county#0, s_state#0, s_zip#0], functions=[partial_sum(cast(CASE WHEN ((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) <= 30) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) > 30) && ((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) <= 60)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) > 60) && ((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) <= 90)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) > 90) && ((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) <= 120)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN ((sr_returned_date_sk#0L - cast(ss_sold_date_sk#0 as bigint)) > 120) THEN 1 ELSE 0 END as bigint))])
         +- *Project [s_county#0, s_city#0, s_street_name#0, s_suite_number#0, s_state#0, s_street_number#0, s_company_id#0, sr_returned_date_sk#0L, ss_sold_date_sk#0, s_zip#0, s_store_name#0, s_street_type#0]
            +- *BroadcastHashJoin [sr_returned_date_sk#0L], [cast(d_date_sk#0 as bigint)], Inner, BuildRight
               :- *Project [s_county#0, s_city#0, s_street_name#0, s_suite_number#0, s_state#0, s_street_number#0, s_company_id#0, sr_returned_date_sk#0L, ss_sold_date_sk#0, s_zip#0, s_store_name#0, s_street_type#0]
               :  +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
               :     :- *Project [s_county#0, s_city#0, s_street_name#0, s_suite_number#0, s_state#0, s_street_number#0, s_company_id#0, sr_returned_date_sk#0L, ss_sold_date_sk#0, s_zip#0, s_store_name#0, s_street_type#0]
               :     :  +- *BroadcastHashJoin [ss_store_sk#0], [s_store_sk#0], Inner, BuildRight
               :     :     :- *Project [sr_returned_date_sk#0L, ss_store_sk#0, ss_sold_date_sk#0]
               :     :     :  +- *BroadcastHashJoin [cast(ss_ticket_number#0 as bigint), cast(ss_item_sk#0 as bigint), cast(ss_customer_sk#0 as bigint)], [sr_ticket_number#0L, sr_item_sk#0L, sr_customer_sk#0L], Inner, BuildRight
               :     :     :     :- *Project [ss_item_sk#0, ss_ticket_number#0, ss_store_sk#0, ss_sold_date_sk#0, ss_customer_sk#0]
               :     :     :     :  +- *Filter ((((isnotnull(ss_item_sk#0) && isnotnull(ss_store_sk#0)) && isnotnull(ss_ticket_number#0)) && isnotnull(ss_customer_sk#0)) && isnotnull(ss_sold_date_sk#0))
               :     :     :     :     +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_item_sk#0,ss_customer_sk#0,ss_store_sk#0,ss_ticket_number#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ss_ticket_number:int>
               :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[3, bigint, true], input[1, bigint, true], input[2, bigint, true]))
               :     :     :        +- *Project [sr_customer_sk#0L, sr_item_sk#0L, sr_ticket_number#0L, sr_returned_date_sk#0L]
               :     :     :           +- *Filter (((isnotnull(sr_item_sk#0L) && isnotnull(sr_customer_sk#0L)) && isnotnull(sr_returned_date_sk#0L)) && isnotnull(sr_ticket_number#0L))
               :     :     :              +- *FileScan parquet default.store_returns[sr_returned_date_sk#0L,sr_item_sk#0L,sr_customer_sk#0L,sr_ticket_number#0L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,sr_ticket_number:bigint>
               :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :        +- *Project [s_county#0, s_city#0, s_street_name#0, s_suite_number#0, s_state#0, s_street_number#0, s_company_id#0, s_zip#0, s_store_sk#0, s_store_name#0, s_street_type#0]
               :     :           +- *Filter isnotnull(s_store_sk#0)
               :     :              +- *FileScan parquet default.store[s_store_sk#0,s_store_name#0,s_company_id#0,s_street_number#0,s_street_name#0,s_street_type#0,s_suite_number#0,s_city#0,s_county#0,s_state#0,s_zip#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,s_street_name:s...
               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :        +- *Project [d_date_sk#0]
               :           +- *Filter isnotnull(d_date_sk#0)
               :              +- *FileScan parquet default.date_dim[d_date_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>, ReadSchema: struct<d_date_sk:int>
               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  +- *Project [d_date_sk#0]
                     +- *Filter (((((8 = d_moy#0) && isnotnull(d_moy#0)) && isnotnull(d_date_sk#0)) && isnotnull(d_year#0)) && (d_year#0 = 2001))
                        +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0,d_moy#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_moy:int>
