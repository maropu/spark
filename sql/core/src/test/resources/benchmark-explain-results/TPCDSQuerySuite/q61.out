TakeOrderedAndProject(limit=100, orderBy=[promotions#0 ASC NULLS FIRST,total#0 ASC NULLS FIRST], output=[promotions#0,total#0,(CAST((CAST(CAST(promotions AS DECIMAL(15,4)) AS DECIMAL(15,4)) / CAST(CAST(total AS DECIMAL(15,4)) AS DECIMAL(15,4))) AS DECIMAL(35,20)) * CAST(CAST(100 AS DECIMAL(3,0)) AS DECIMAL(35,20)))#0])
+- *Project [total#0, promotions#0, CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(promotions#0 as decimal(15,4))) / promote_precision(cast(total#0 as decimal(15,4)))), DecimalType(35,20))) * 100.00000000000000000000), DecimalType(38,19)) AS none#0]
   +- BroadcastNestedLoopJoin BuildRight, Inner
      :- *HashAggregate(keys=[], functions=[sum(UnscaledValue(ss_ext_sales_price#0))])
      :  +- Exchange SinglePartition
      :     +- *HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#0))])
      :        +- *Project [ss_ext_sales_price#0]
      :           +- *BroadcastHashJoin [ss_item_sk#0], [i_item_sk#0], Inner, BuildRight
      :              :- *Project [ss_item_sk#0, ss_ext_sales_price#0]
      :              :  +- *BroadcastHashJoin [c_current_addr_sk#0], [ca_address_sk#0], Inner, BuildRight
      :              :     :- *Project [c_current_addr_sk#0, ss_item_sk#0, ss_ext_sales_price#0]
      :              :     :  +- *BroadcastHashJoin [ss_customer_sk#0], [c_customer_sk#0], Inner, BuildRight
      :              :     :     :- *Project [ss_item_sk#0, ss_customer_sk#0, ss_ext_sales_price#0]
      :              :     :     :  +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
      :              :     :     :     :- *Project [ss_item_sk#0, ss_sold_date_sk#0, ss_customer_sk#0, ss_ext_sales_price#0]
      :              :     :     :     :  +- *BroadcastHashJoin [ss_promo_sk#0], [p_promo_sk#0], Inner, BuildRight
      :              :     :     :     :     :- *Project [ss_item_sk#0, ss_sold_date_sk#0, ss_promo_sk#0, ss_customer_sk#0, ss_ext_sales_price#0]
      :              :     :     :     :     :  +- *BroadcastHashJoin [ss_store_sk#0], [s_store_sk#0], Inner, BuildRight
      :              :     :     :     :     :     :- *Project [ss_item_sk#0, ss_store_sk#0, ss_sold_date_sk#0, ss_promo_sk#0, ss_customer_sk#0, ss_ext_sales_price#0]
      :              :     :     :     :     :     :  +- *Filter ((((isnotnull(ss_item_sk#0) && isnotnull(ss_store_sk#0)) && isnotnull(ss_customer_sk#0)) && isnotnull(ss_promo_sk#0)) && isnotnull(ss_sold_date_sk#0))
      :              :     :     :     :     :     :     +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_item_sk#0,ss_customer_sk#0,ss_store_sk#0,ss_promo_sk#0,ss_ext_sales_price#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ss_e...
      :              :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :              :     :     :     :     :        +- *Project [s_store_sk#0]
      :              :     :     :     :     :           +- *Filter (((-5.00 = s_gmt_offset#0) && isnotnull(s_store_sk#0)) && isnotnull(s_gmt_offset#0))
      :              :     :     :     :     :              +- *FileScan parquet default.store[s_store_sk#0,s_gmt_offset#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,2)>
      :              :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :              :     :     :     :        +- *Project [p_promo_sk#0]
      :              :     :     :     :           +- *Filter ((((p_channel_tv#0 = Y) || (Y = p_channel_dmail#0)) || (p_channel_email#0 = Y)) && isnotnull(p_promo_sk#0))
      :              :     :     :     :              +- *FileScan parquet default.promotion[p_promo_sk#0,p_channel_dmail#0,p_channel_email#0,p_channel_tv#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,p_channel_tv:string>
      :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :              :     :     :        +- *Project [d_date_sk#0]
      :              :     :     :           +- *Filter ((((isnotnull(d_date_sk#0) && isnotnull(d_moy#0)) && isnotnull(d_year#0)) && (1998 = d_year#0)) && (d_moy#0 = 11))
      :              :     :     :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0,d_moy#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_moy:int>
      :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :              :     :        +- *Project [c_current_addr_sk#0, c_customer_sk#0]
      :              :     :           +- *Filter (isnotnull(c_current_addr_sk#0) && isnotnull(c_customer_sk#0))
      :              :     :              +- *FileScan parquet default.customer[c_customer_sk#0,c_current_addr_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,c_current_addr_sk:int>
      :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :              :        +- *Project [ca_address_sk#0]
      :              :           +- *Filter ((isnotnull(ca_address_sk#0) && (-5.00 = ca_gmt_offset#0)) && isnotnull(ca_gmt_offset#0))
      :              :              +- *FileScan parquet default.customer_address[ca_address_sk#0,ca_gmt_offset#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,2)>
      :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :                 +- *Project [i_item_sk#0]
      :                    +- *Filter ((isnotnull(i_item_sk#0) && isnotnull(i_category#0)) && (i_category#0 = Jewelry))
      :                       +- *FileScan parquet default.item[i_item_sk#0,i_category#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,i_category:string>
      +- BroadcastExchange IdentityBroadcastMode
         +- *HashAggregate(keys=[], functions=[sum(UnscaledValue(ss_ext_sales_price#0))])
            +- Exchange SinglePartition
               +- *HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#0))])
                  +- *Project [ss_ext_sales_price#0]
                     +- *BroadcastHashJoin [ss_item_sk#0], [i_item_sk#0], Inner, BuildRight
                        :- *Project [ss_item_sk#0, ss_ext_sales_price#0]
                        :  +- *BroadcastHashJoin [c_current_addr_sk#0], [ca_address_sk#0], Inner, BuildRight
                        :     :- *Project [c_current_addr_sk#0, ss_item_sk#0, ss_ext_sales_price#0]
                        :     :  +- *BroadcastHashJoin [ss_customer_sk#0], [c_customer_sk#0], Inner, BuildRight
                        :     :     :- *Project [ss_item_sk#0, ss_customer_sk#0, ss_ext_sales_price#0]
                        :     :     :  +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
                        :     :     :     :- *Project [ss_item_sk#0, ss_sold_date_sk#0, ss_customer_sk#0, ss_ext_sales_price#0]
                        :     :     :     :  +- *BroadcastHashJoin [ss_store_sk#0], [s_store_sk#0], Inner, BuildRight
                        :     :     :     :     :- *Project [ss_item_sk#0, ss_store_sk#0, ss_sold_date_sk#0, ss_customer_sk#0, ss_ext_sales_price#0]
                        :     :     :     :     :  +- *Filter (((isnotnull(ss_item_sk#0) && isnotnull(ss_store_sk#0)) && isnotnull(ss_customer_sk#0)) && isnotnull(ss_sold_date_sk#0))
                        :     :     :     :     :     +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_item_sk#0,ss_customer_sk#0,ss_store_sk#0,ss_ext_sales_price#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ss_ext_sales_price:d...
                        :     :     :     :     +- ReusedExchange [s_store_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :     :     :     +- ReusedExchange [d_date_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :     :     +- ReusedExchange [c_customer_sk#0, c_current_addr_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :     +- ReusedExchange [ca_address_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        +- ReusedExchange [i_item_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
