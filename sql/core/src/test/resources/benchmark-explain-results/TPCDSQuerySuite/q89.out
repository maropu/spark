TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#0 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#0 as decimal(22,6)))), DecimalType(22,6)) ASC NULLS FIRST,s_store_name#0 ASC NULLS FIRST], output=[i_category#0,i_class#0,i_brand#0,s_store_name#0,s_company_name#0,d_moy#0,sum_sales#0,avg_monthly_sales#0])
+- *Project [d_moy#0, i_category#0, i_brand#0, sum_sales#0, avg_monthly_sales#0, i_class#0, s_company_name#0, s_store_name#0]
   +- *Filter (CASE WHEN NOT (avg_monthly_sales#0 = 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#0 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#0 as decimal(22,6)))), DecimalType(22,6)))) / promote_precision(cast(avg_monthly_sales#0 as decimal(22,6)))), DecimalType(38,16)) ELSE null END > 0.1000000000000000)
      +- Window [avg(_w0#0) windowspecdefinition(i_category#0, i_brand#0, s_store_name#0, s_company_name#0, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS none#0], [i_category#0, i_brand#0, s_store_name#0, s_company_name#0]
         +- *Sort [i_category#0 ASC NULLS FIRST, i_brand#0 ASC NULLS FIRST, s_store_name#0 ASC NULLS FIRST, s_company_name#0 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_category#0, i_brand#0, s_store_name#0, s_company_name#0, 5)
               +- *HashAggregate(keys=[i_category#0, i_class#0, i_brand#0, s_store_name#0, s_company_name#0, d_moy#0], functions=[sum(UnscaledValue(ss_sales_price#0))])
                  +- Exchange hashpartitioning(i_category#0, i_class#0, i_brand#0, s_store_name#0, s_company_name#0, d_moy#0, 5)
                     +- *HashAggregate(keys=[i_category#0, i_class#0, i_brand#0, s_store_name#0, s_company_name#0, d_moy#0], functions=[partial_sum(UnscaledValue(ss_sales_price#0))])
                        +- *Project [ss_sales_price#0, i_brand#0, i_class#0, d_moy#0, s_company_name#0, s_store_name#0, i_category#0]
                           +- *BroadcastHashJoin [ss_store_sk#0], [s_store_sk#0], Inner, BuildRight
                              :- *Project [ss_sales_price#0, i_brand#0, i_class#0, d_moy#0, ss_store_sk#0, i_category#0]
                              :  +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
                              :     :- *Project [ss_sales_price#0, i_brand#0, i_class#0, ss_store_sk#0, ss_sold_date_sk#0, i_category#0]
                              :     :  +- *BroadcastHashJoin [i_item_sk#0], [ss_item_sk#0], Inner, BuildRight
                              :     :     :- *Project [i_brand#0, i_item_sk#0, i_class#0, i_category#0]
                              :     :     :  +- *Filter (isnotnull(i_item_sk#0) && ((i_class#0 IN (computers,stereo,football) && i_category#0 IN (Books,Electronics,Sports)) || (i_category#0 IN (Men,Jewelry,Women) && i_class#0 IN (shirts,birdal,dresses))))
                              :     :     :     +- *FileScan parquet default.item[i_item_sk#0,i_brand#0,i_class#0,i_category#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,i_category:string>
                              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)))
                              :     :        +- *Project [ss_sales_price#0, ss_item_sk#0, ss_store_sk#0, ss_sold_date_sk#0]
                              :     :           +- *Filter ((isnotnull(ss_item_sk#0) && isnotnull(ss_store_sk#0)) && isnotnull(ss_sold_date_sk#0))
                              :     :              +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_item_sk#0,ss_store_sk#0,ss_sales_price#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,2)>
                              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                              :        +- *Project [d_date_sk#0, d_moy#0]
                              :           +- *Filter (d_year#0 IN (1999) && isnotnull(d_date_sk#0))
                              :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0,d_moy#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_moy:int>
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                                 +- *Project [s_store_sk#0, s_company_name#0, s_store_name#0]
                                    +- *Filter isnotnull(s_store_sk#0)
                                       +- *FileScan parquet default.store[s_store_sk#0,s_store_name#0,s_company_name#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,s_company_name:string>
