TakeOrderedAndProject(limit=100, orderBy=[c_last_name#0 ASC NULLS FIRST,c_first_name#0 ASC NULLS FIRST,ca_city#0 ASC NULLS FIRST,bought_city#0 ASC NULLS FIRST,ss_ticket_number#0 ASC NULLS FIRST], output=[c_last_name#0,c_first_name#0,ca_city#0,bought_city#0,ss_ticket_number#0,amt#0,profit#0])
+- *Project [c_last_name#0, profit#0, ss_ticket_number#0, amt#0, ca_city#0, bought_city#0, c_first_name#0]
   +- *BroadcastHashJoin [c_current_addr_sk#0], [ca_address_sk#0], Inner, BuildRight, NOT (ca_city#0 = bought_city#0)
      :- *Project [c_current_addr_sk#0, bought_city#0, c_first_name#0, c_last_name#0, profit#0, amt#0, ss_ticket_number#0]
      :  +- *BroadcastHashJoin [ss_customer_sk#0], [c_customer_sk#0], Inner, BuildRight
      :     :- *HashAggregate(keys=[ss_ticket_number#0, ss_customer_sk#0, ss_addr_sk#0, ca_city#0], functions=[sum(UnscaledValue(ss_coupon_amt#0)), sum(UnscaledValue(ss_net_profit#0))])
      :     :  +- Exchange hashpartitioning(ss_ticket_number#0, ss_customer_sk#0, ss_addr_sk#0, ca_city#0, 5)
      :     :     +- *HashAggregate(keys=[ss_ticket_number#0, ss_customer_sk#0, ss_addr_sk#0, ca_city#0], functions=[partial_sum(UnscaledValue(ss_coupon_amt#0)), partial_sum(UnscaledValue(ss_net_profit#0))])
      :     :        +- *Project [ca_city#0, ss_ticket_number#0, ss_coupon_amt#0, ss_net_profit#0, ss_customer_sk#0, ss_addr_sk#0]
      :     :           +- *BroadcastHashJoin [ss_addr_sk#0], [ca_address_sk#0], Inner, BuildRight
      :     :              :- *Project [ss_ticket_number#0, ss_coupon_amt#0, ss_net_profit#0, ss_customer_sk#0, ss_addr_sk#0]
      :     :              :  +- *BroadcastHashJoin [ss_hdemo_sk#0], [hd_demo_sk#0], Inner, BuildRight
      :     :              :     :- *Project [ss_hdemo_sk#0, ss_ticket_number#0, ss_coupon_amt#0, ss_net_profit#0, ss_customer_sk#0, ss_addr_sk#0]
      :     :              :     :  +- *BroadcastHashJoin [ss_store_sk#0], [s_store_sk#0], Inner, BuildRight
      :     :              :     :     :- *Project [ss_hdemo_sk#0, ss_ticket_number#0, ss_store_sk#0, ss_coupon_amt#0, ss_net_profit#0, ss_customer_sk#0, ss_addr_sk#0]
      :     :              :     :     :  +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
      :     :              :     :     :     :- *Project [ss_hdemo_sk#0, ss_ticket_number#0, ss_store_sk#0, ss_sold_date_sk#0, ss_coupon_amt#0, ss_net_profit#0, ss_customer_sk#0, ss_addr_sk#0]
      :     :              :     :     :     :  +- *Filter (((((isnotnull(ss_hdemo_sk#0) && isnotnull(ss_customer_sk#0)) && ss_sold_date_sk#0 INSET (2451790,2451609,2451294,2451658,2452099,2451482,2451700,2452035,2452274,2451258,2451847,2451714,2451937,2451860,2451601,2451573,2451686,2452008,2451454,2451882,2451832,2452259,2451671,2451903,2451497,2452162,2451322,2451517,2451434,2451273,2451405,2452105,2451924,2452050,2452126,2452203,2451818,2451559,2451853,2451238,2451209,2451357,2451959,2452239,2451608,2452141,2452252,2451623,2451867,2451504,2451910,2452232,2451874,2451581,2451329,2451223,2451783,2452267,2452042,2451895,2451986,2452091,2451693,2451265,2451678,2451825,2451244,2451490,2451287,2451419,2451546,2451245,2451713,2452070,2451189,2451804,2451468,2451525,2451902,2452077,2452161,2451378,2451567,2451931,2451699,2451251,2451840,2452253,2451938,2451510,2452231,2452036,2451616,2451230,2452112,2451846,2451966,2451538,2451819,2452140,2452183,2451496,2451791,2451595,2451574,2451363,2451994,2451917,2451602,2452273,2451237,2451350,2451685,2451259,2451286,2451972,2452224,2451370,2452245,2451643,2451993,2451315,2451301,2451560,2451433,2452225,2451532,2451755,2451854,2451545,2451210,2451587,2451987,2451447,2452197,2451552,2451896,2451679,2452147,2451735,2452022,2451707,2451868,2451398,2451777,2451181,2451503,2451839,2452175,2451441,2452154,2452029,2452196,2451952,2451805,2451965,2451539,2452001,2451833,2451392,2451524,2451461,2452133,2451448,2451307,2451615,2451769,2451412,2451349,2451651,2451763,2451203,2452064,2451980,2451748,2451637,2452182,2451279,2451231,2451734,2451692,2452071,2451336,2451300,2451727,2451630,2452189,2451875,2451973,2451328,2452084,2451399,2451944,2452204,2451385,2451776,2451384,2451272,2451812,2451749,2451566,2451182,2451945,2451420,2451930,2452057,2451756,2451644,2451314,2451364,2452007,2451798,2451475,2452015,2451440,2452000,2451588,2452148,2451195,2452217,2451371,2452176,2451531,2452134,2452211,2451462,2451188,2451741,2452119,2451342,2451580,2451672,2451889,2451280,2451406,2451293,2451217,2452049,2452106,2451321,2451335,2451483,2452260,2451657,2451979,2451518,2451629,2451728,2451923,2451861,2451951,2452246,2451455,2451356,2451224,2452210,2452021,2451427,2451202,2452098,2452168,2451553,2451391,2451706,2452155,2451196,2451770,2452127,2451762,2452078,2451958,2451721,2451665,2452120,2451252,2452085,2452092,2451476,2452218,2452169,2451797,2451650,2451881,2451511,2451469,2451888,2452043,2452266,2451664,2452014,2451343,2452056,2452190,2452063,2451636,2451742,2451811,2451720,2451308,2451489,2451413,2451216,2451594,2452238,2451784,2451426,2451622,2451916,2452113,2451909,2451266,2451826,2451377,2452028)) && isnotnull(ss_store_sk#0)) && isnotnull(ss_sold_date_sk#0)) && isnotnull(ss_addr_sk#0))
      :     :              :     :     :     :     +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_customer_sk#0,ss_hdemo_sk#0,ss_addr_sk#0,ss_store_sk#0,ss_ticket_number#0,ss_coupon_amt#0,ss_net_profit#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ss_t...
      :     :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :              :     :     :        +- *Project [d_date_sk#0]
      :     :              :     :     :           +- *Filter (((isnotnull(d_date_sk#0) && d_date_sk#0 INSET (2451790,2451609,2451294,2451658,2452099,2451482,2451700,2452035,2452274,2451258,2451847,2451714,2451937,2451860,2451601,2451573,2451686,2452008,2451454,2451882,2451832,2452259,2451671,2451903,2451497,2452162,2451322,2451517,2451434,2451273,2451405,2452105,2451924,2452050,2452126,2452203,2451818,2451559,2451853,2451238,2451209,2451357,2451959,2452239,2451608,2452141,2452252,2451623,2451867,2451504,2451910,2452232,2451874,2451581,2451329,2451223,2451783,2452267,2452042,2451895,2451986,2452091,2451693,2451265,2451678,2451825,2451244,2451490,2451287,2451419,2451546,2451245,2451713,2452070,2451189,2451804,2451468,2451525,2451902,2452077,2452161,2451378,2451567,2451931,2451699,2451251,2451840,2452253,2451938,2451510,2452231,2452036,2451616,2451230,2452112,2451846,2451966,2451538,2451819,2452140,2452183,2451496,2451791,2451595,2451574,2451363,2451994,2451917,2451602,2452273,2451237,2451350,2451685,2451259,2451286,2451972,2452224,2451370,2452245,2451643,2451993,2451315,2451301,2451560,2451433,2452225,2451532,2451755,2451854,2451545,2451210,2451587,2451987,2451447,2452197,2451552,2451896,2451679,2452147,2451735,2452022,2451707,2451868,2451398,2451777,2451181,2451503,2451839,2452175,2451441,2452154,2452029,2452196,2451952,2451805,2451965,2451539,2452001,2451833,2451392,2451524,2451461,2452133,2451448,2451307,2451615,2451769,2451412,2451349,2451651,2451763,2451203,2452064,2451980,2451748,2451637,2452182,2451279,2451231,2451734,2451692,2452071,2451336,2451300,2451727,2451630,2452189,2451875,2451973,2451328,2452084,2451399,2451944,2452204,2451385,2451776,2451384,2451272,2451812,2451749,2451566,2451182,2451945,2451420,2451930,2452057,2451756,2451644,2451314,2451364,2452007,2451798,2451475,2452015,2451440,2452000,2451588,2452148,2451195,2452217,2451371,2452176,2451531,2452134,2452211,2451462,2451188,2451741,2452119,2451342,2451580,2451672,2451889,2451280,2451406,2451293,2451217,2452049,2452106,2451321,2451335,2451483,2452260,2451657,2451979,2451518,2451629,2451728,2451923,2451861,2451951,2452246,2451455,2451356,2451224,2452210,2452021,2451427,2451202,2452098,2452168,2451553,2451391,2451706,2452155,2451196,2451770,2452127,2451762,2452078,2451958,2451721,2451665,2452120,2451252,2452085,2452092,2451476,2452218,2452169,2451797,2451650,2451881,2451511,2451469,2451888,2452043,2452266,2451664,2452014,2451343,2452056,2452190,2452063,2451636,2451742,2451811,2451720,2451308,2451489,2451413,2451216,2451594,2452238,2451784,2451426,2451622,2451916,2452113,2451909,2451266,2451826,2451377,2452028)) && d_dow#0 IN (6,0)) && d_year#0 IN (1999,2000,2001))
      :     :              :     :     :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0,d_dow#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_dow:int>
      :     :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :              :     :        +- *Project [s_store_sk#0]
      :     :              :     :           +- *Filter (isnotnull(s_store_sk#0) && s_city#0 IN (Midway,Concord,Spring Hill,Brownsville,Greenville))
      :     :              :     :              +- *FileScan parquet default.store[s_store_sk#0,s_city#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,s_city:string>
      :     :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :              :        +- *Project [hd_demo_sk#0]
      :     :              :           +- *Filter (((3 = hd_vehicle_count#0) || (hd_dep_count#0 = 5)) && isnotnull(hd_demo_sk#0))
      :     :              :              +- *FileScan parquet default.household_demographics[hd_demo_sk#0,hd_dep_count#0,hd_vehicle_count#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,hd_vehicle_count:int>
      :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :                 +- *Project [ca_city#0, ca_address_sk#0]
      :     :                    +- *Filter (isnotnull(ca_city#0) && isnotnull(ca_address_sk#0))
      :     :                       +- *FileScan parquet default.customer_address[ca_address_sk#0,ca_city#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ca_city:string>
      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :        +- *Project [c_current_addr_sk#0, c_first_name#0, c_last_name#0, c_customer_sk#0]
      :           +- *Filter (isnotnull(c_current_addr_sk#0) && isnotnull(c_customer_sk#0))
      :              +- *FileScan parquet default.customer[c_customer_sk#0,c_current_addr_sk#0,c_first_name#0,c_last_name#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,c_last_name:string>
      +- ReusedExchange [ca_address_sk#0, ca_city#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
