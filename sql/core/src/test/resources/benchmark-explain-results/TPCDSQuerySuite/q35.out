TakeOrderedAndProject(limit=100, orderBy=[ca_state#0 ASC NULLS FIRST,cd_gender#0 ASC NULLS FIRST,cd_marital_status#0 ASC NULLS FIRST,aggOrder#0 ASC NULLS FIRST,cd_dep_employed_count#0 ASC NULLS FIRST,cd_dep_college_count#0 ASC NULLS FIRST], output=[ca_state#0,cd_gender#0,cd_marital_status#0,cnt1#0L,min(cd_dep_count)#0,max(cd_dep_count)#0,avg(cd_dep_count)#0,cd_dep_employed_count#0,cnt2#0L,min(cd_dep_employed_count)#0,max(cd_dep_employed_count)#0,avg(cd_dep_employed_count)#0,cd_dep_college_count#0,cnt3#0L,min(cd_dep_college_count)#0,max(cd_dep_college_count)#0,avg(cd_dep_college_count)#0])
+- *HashAggregate(keys=[ca_state#0, cd_gender#0, cd_marital_status#0, cd_dep_count#0, cd_dep_employed_count#0, cd_dep_college_count#0], functions=[count(1), min(cd_dep_count#0), max(cd_dep_count#0), avg(cast(cd_dep_count#0 as bigint)), min(cd_dep_employed_count#0), max(cd_dep_employed_count#0), avg(cast(cd_dep_employed_count#0 as bigint)), min(cd_dep_college_count#0), max(cd_dep_college_count#0), avg(cast(cd_dep_college_count#0 as bigint))])
   +- Exchange hashpartitioning(ca_state#0, cd_gender#0, cd_marital_status#0, cd_dep_count#0, cd_dep_employed_count#0, cd_dep_college_count#0, 5)
      +- *HashAggregate(keys=[ca_state#0, cd_gender#0, cd_marital_status#0, cd_dep_count#0, cd_dep_employed_count#0, cd_dep_college_count#0], functions=[partial_count(1), partial_min(cd_dep_count#0), partial_max(cd_dep_count#0), partial_avg(cast(cd_dep_count#0 as bigint)), partial_min(cd_dep_employed_count#0), partial_max(cd_dep_employed_count#0), partial_avg(cast(cd_dep_employed_count#0 as bigint)), partial_min(cd_dep_college_count#0), partial_max(cd_dep_college_count#0), partial_avg(cast(cd_dep_college_count#0 as bigint))])
         +- *Project [cd_dep_count#0, cd_gender#0, cd_marital_status#0, cd_dep_college_count#0, ca_state#0, cd_dep_employed_count#0]
            +- *BroadcastHashJoin [c_current_cdemo_sk#0], [cd_demo_sk#0], Inner, BuildRight
               :- *Project [c_current_cdemo_sk#0, ca_state#0]
               :  +- *BroadcastHashJoin [c_current_addr_sk#0], [ca_address_sk#0], Inner, BuildRight
               :     :- *Project [c_current_addr_sk#0, c_current_cdemo_sk#0]
               :     :  +- *Filter (exists#0 || exists#0)
               :     :     +- *BroadcastHashJoin [c_customer_sk#0], [cs_ship_customer_sk#0], ExistenceJoin(exists#3682), BuildRight
               :     :        :- *BroadcastHashJoin [c_customer_sk#0], [ws_bill_customer_sk#0], ExistenceJoin(exists#3681), BuildRight
               :     :        :  :- *BroadcastHashJoin [c_customer_sk#0], [ss_customer_sk#0], LeftSemi, BuildRight
               :     :        :  :  :- *Project [c_current_addr_sk#0, c_customer_sk#0, c_current_cdemo_sk#0]
               :     :        :  :  :  +- *Filter (isnotnull(c_current_addr_sk#0) && isnotnull(c_current_cdemo_sk#0))
               :     :        :  :  :     +- *FileScan parquet default.customer[c_customer_sk#0,c_current_cdemo_sk#0,c_current_addr_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,c_current_addr_sk:int>
               :     :        :  :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :        :  :     +- *Project [ss_customer_sk#0]
               :     :        :  :        +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
               :     :        :  :           :- *Project [ss_sold_date_sk#0, ss_customer_sk#0]
               :     :        :  :           :  +- *Filter isnotnull(ss_sold_date_sk#0)
               :     :        :  :           :     +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_customer_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ss_customer_sk:int>
               :     :        :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :        :  :              +- *Project [d_date_sk#0]
               :     :        :  :                 +- *Filter ((((isnotnull(d_date_sk#0) && isnotnull(d_year#0)) && (4 > d_qoy#0)) && (2002 = d_year#0)) && isnotnull(d_qoy#0))
               :     :        :  :                    +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0,d_qoy#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_qoy:int>
               :     :        :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :        :     +- *Project [ws_bill_customer_sk#0]
               :     :        :        +- *BroadcastHashJoin [ws_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
               :     :        :           :- *Project [ws_bill_customer_sk#0, ws_sold_date_sk#0]
               :     :        :           :  +- *Filter isnotnull(ws_sold_date_sk#0)
               :     :        :           :     +- *FileScan parquet default.web_sales[ws_sold_date_sk#0,ws_bill_customer_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ws_bill_customer_sk:int>
               :     :        :           +- ReusedExchange [d_date_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :           +- *Project [cs_ship_customer_sk#0]
               :     :              +- *BroadcastHashJoin [cs_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
               :     :                 :- *Project [cs_ship_customer_sk#0, cs_sold_date_sk#0]
               :     :                 :  +- *Filter isnotnull(cs_sold_date_sk#0)
               :     :                 :     +- *FileScan parquet default.catalog_sales[cs_sold_date_sk#0,cs_ship_customer_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,cs_ship_customer_sk:int>
               :     :                 +- ReusedExchange [d_date_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :        +- *Project [ca_address_sk#0, ca_state#0]
               :           +- *Filter isnotnull(ca_address_sk#0)
               :              +- *FileScan parquet default.customer_address[ca_address_sk#0,ca_state#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ca_state:string>
               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  +- *Project [cd_dep_count#0, cd_gender#0, cd_marital_status#0, cd_demo_sk#0, cd_dep_college_count#0, cd_dep_employed_count#0]
                     +- *Filter isnotnull(cd_demo_sk#0)
                        +- *FileScan parquet default.customer_demographics[cd_demo_sk#0,cd_gender#0,cd_marital_status#0,cd_dep_count#0,cd_dep_employed_count#0,cd_dep_college_count#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,cd_dep_employed_...
