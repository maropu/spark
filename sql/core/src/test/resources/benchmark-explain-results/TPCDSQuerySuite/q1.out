TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#0 ASC NULLS FIRST], output=[c_customer_id#0])
+- *Project [c_customer_id#0]
   +- *BroadcastHashJoin [ctr_customer_sk#0L], [cast(c_customer_sk#0 as bigint)], Inner, BuildRight
      :- *Project [ctr_customer_sk#0L]
      :  +- *BroadcastHashJoin [ctr_store_sk#0L], [cast(s_store_sk#0 as bigint)], Inner, BuildRight
      :     :- *Project [ctr_customer_sk#0L, ctr_store_sk#0L]
      :     :  +- *BroadcastHashJoin [ctr_store_sk#0L], [ctr_store_sk#0L#0L], Inner, BuildRight, (cast(ctr_total_return#0 as decimal(24,7)) > (CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#0)
      :     :     :- *Filter isnotnull(ctr_total_return#0)
      :     :     :  +- *HashAggregate(keys=[sr_customer_sk#0L, sr_store_sk#0L], functions=[sum(UnscaledValue(sr_return_amt#0))])
      :     :     :     +- Exchange hashpartitioning(sr_customer_sk#0L, sr_store_sk#0L, 5)
      :     :     :        +- *HashAggregate(keys=[sr_customer_sk#0L, sr_store_sk#0L], functions=[partial_sum(UnscaledValue(sr_return_amt#0))])
      :     :     :           +- *Project [sr_return_amt#0, sr_customer_sk#0L, sr_store_sk#0L]
      :     :     :              +- *BroadcastHashJoin [sr_returned_date_sk#0L], [cast(d_date_sk#0 as bigint)], Inner, BuildRight
      :     :     :                 :- *Project [sr_return_amt#0, sr_customer_sk#0L, sr_store_sk#0L, sr_returned_date_sk#0L]
      :     :     :                 :  +- *Filter ((isnotnull(sr_customer_sk#0L) && isnotnull(sr_returned_date_sk#0L)) && isnotnull(sr_store_sk#0L))
      :     :     :                 :     +- *FileScan parquet default.store_returns[sr_returned_date_sk#0L,sr_customer_sk#0L,sr_store_sk#0L,sr_return_amt#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,sr_return_amt:decimal(...
      :     :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     :     :                    +- *Project [d_date_sk#0]
      :     :     :                       +- *Filter ((isnotnull(d_date_sk#0) && isnotnull(d_year#0)) && (2000 = d_year#0))
      :     :     :                          +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_year:int>
      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, true]))
      :     :        +- *Filter isnotnull((CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#0)
      :     :           +- *HashAggregate(keys=[ctr_store_sk#0L], functions=[avg(ctr_total_return#0)])
      :     :              +- Exchange hashpartitioning(ctr_store_sk#0L, 5)
      :     :                 +- *HashAggregate(keys=[ctr_store_sk#0L], functions=[partial_avg(ctr_total_return#0)])
      :     :                    +- *HashAggregate(keys=[sr_customer_sk#0L, sr_store_sk#0L], functions=[sum(UnscaledValue(sr_return_amt#0))])
      :     :                       +- Exchange hashpartitioning(sr_customer_sk#0L, sr_store_sk#0L, 5)
      :     :                          +- *HashAggregate(keys=[sr_customer_sk#0L, sr_store_sk#0L], functions=[partial_sum(UnscaledValue(sr_return_amt#0))])
      :     :                             +- *Project [sr_return_amt#0, sr_customer_sk#0L, sr_store_sk#0L]
      :     :                                +- *BroadcastHashJoin [sr_returned_date_sk#0L], [cast(d_date_sk#0 as bigint)], Inner, BuildRight
      :     :                                   :- *Project [sr_return_amt#0, sr_customer_sk#0L, sr_store_sk#0L, sr_returned_date_sk#0L]
      :     :                                   :  +- *Filter (isnotnull(sr_returned_date_sk#0L) && isnotnull(sr_store_sk#0L))
      :     :                                   :     +- *FileScan parquet default.store_returns[sr_returned_date_sk#0L,sr_customer_sk#0L,sr_store_sk#0L,sr_return_amt#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,sr_return_amt:decimal(...
      :     :                                   +- ReusedExchange [d_date_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :        +- *Project [s_store_sk#0]
      :           +- *Filter ((isnotnull(s_state#0) && isnotnull(s_store_sk#0)) && (s_state#0 = TN))
      :              +- *FileScan parquet default.store[s_store_sk#0,s_state#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,s_state:string>
      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         +- *Project [c_customer_sk#0, c_customer_id#0]
            +- *Filter isnotnull(c_customer_sk#0)
               +- *FileScan parquet default.customer[c_customer_sk#0,c_customer_id#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,c_customer_id:string>
