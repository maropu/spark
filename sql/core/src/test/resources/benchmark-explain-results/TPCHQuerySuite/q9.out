*Sort [nation#0 ASC NULLS FIRST, o_year#0 DESC NULLS LAST], true, 0
+- Exchange rangepartitioning(nation#0 ASC NULLS FIRST, o_year#0 DESC NULLS LAST, 5)
   +- *HashAggregate(keys=[nation#0, o_year#0], functions=[sum(amount#0)])
      +- Exchange hashpartitioning(nation#0, o_year#0, 5)
         +- *HashAggregate(keys=[nation#0, o_year#0], functions=[partial_sum(amount#0)])
            +- *Project [CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(l_extendedprice#0 as decimal(11,0))) * promote_precision(CheckOverflow((1 - promote_precision(cast(l_discount#0 as decimal(11,0)))), DecimalType(11,0)))), DecimalType(22,0)) as decimal(23,0))) - promote_precision(cast(CheckOverflow((promote_precision(ps_supplycost#0) * promote_precision(l_quantity#0)), DecimalType(21,0)) as decimal(23,0)))), DecimalType(23,0)) AS none#0, n_name#0 AS none#0, year(o_orderdate#0) AS none#0]
               +- *BroadcastHashJoin [s_nationkey#0L], [n_nationkey#0L], Inner, BuildRight
                  :- *Project [s_nationkey#0L, l_quantity#0, ps_supplycost#0, l_discount#0, l_extendedprice#0, o_orderdate#0]
                  :  +- *BroadcastHashJoin [l_orderkey#0L], [o_orderkey#0L], Inner, BuildRight
                  :     :- *Project [s_nationkey#0L, l_quantity#0, ps_supplycost#0, l_discount#0, l_orderkey#0L, l_extendedprice#0]
                  :     :  +- *BroadcastHashJoin [l_suppkey#0L, l_partkey#0L], [ps_suppkey#0L, ps_partkey#0L], Inner, BuildRight
                  :     :     :- *Project [l_partkey#0L, s_nationkey#0L, l_quantity#0, l_discount#0, l_suppkey#0L, l_orderkey#0L, l_extendedprice#0]
                  :     :     :  +- *BroadcastHashJoin [l_suppkey#0L], [s_suppkey#0L], Inner, BuildRight
                  :     :     :     :- *Project [l_partkey#0L, l_quantity#0, l_discount#0, l_suppkey#0L, l_orderkey#0L, l_extendedprice#0]
                  :     :     :     :  +- *BroadcastHashJoin [p_partkey#0L], [l_partkey#0L], Inner, BuildRight
                  :     :     :     :     :- *Project [p_partkey#0L]
                  :     :     :     :     :  +- *Filter ((isnotnull(p_name#0) && Contains(p_name#0, green)) && isnotnull(p_partkey#0L))
                  :     :     :     :     :     +- *FileScan parquet default.part[p_partkey#0L,p_name#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,p_name:string>
                  :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, true]))
                  :     :     :     :        +- *Project [l_partkey#0L, l_quantity#0, l_discount#0, l_suppkey#0L, l_orderkey#0L, l_extendedprice#0]
                  :     :     :     :           +- *Filter ((isnotnull(l_partkey#0L) && isnotnull(l_orderkey#0L)) && isnotnull(l_suppkey#0L))
                  :     :     :     :              +- *FileScan parquet default.lineitem[l_orderkey#0L,l_partkey#0L,l_suppkey#0L,l_quantity#0,l_extendedprice#0,l_discount#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,l_extendedpri...
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]))
                  :     :     :        +- *Project [s_suppkey#0L, s_nationkey#0L]
                  :     :     :           +- *Filter (isnotnull(s_suppkey#0L) && isnotnull(s_nationkey#0L))
                  :     :     :              +- *FileScan parquet default.supplier[s_suppkey#0L,s_nationkey#0L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,s_nationkey:bigint>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, true], input[0, bigint, true]))
                  :     :        +- *Project [ps_supplycost#0, ps_partkey#0L, ps_suppkey#0L]
                  :     :           +- *Filter (isnotnull(ps_suppkey#0L) && isnotnull(ps_partkey#0L))
                  :     :              +- *FileScan parquet default.partsupp[ps_partkey#0L,ps_suppkey#0L,ps_supplycost#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,0)>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]))
                  :        +- *Project [o_orderkey#0L, o_orderdate#0]
                  :           +- *Filter isnotnull(o_orderkey#0L)
                  :              +- *FileScan parquet default.orders[o_orderkey#0L,o_orderdate#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,o_orderdate:date>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]))
                     +- *Project [n_name#0, n_nationkey#0L]
                        +- *Filter isnotnull(n_nationkey#0L)
                           +- *FileScan parquet default.nation[n_nationkey#0L,n_name#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,n_name:string>
