TakeOrderedAndProject(limit=100, orderBy=[channel#0 ASC NULLS FIRST,id#0 ASC NULLS FIRST], output=[channel#0,id#0,sales#0,returns#0,profit#0])
+- *HashAggregate(keys=[channel#0, id#0, spark_grouping_id#0], functions=[sum(sales#0), sum(returns#0), sum(profit#0)])
   +- Exchange hashpartitioning(channel#0, id#0, spark_grouping_id#0, 5)
      +- *HashAggregate(keys=[channel#0, id#0, spark_grouping_id#0], functions=[partial_sum(sales#0), partial_sum(returns#0), partial_sum(profit#0)])
         +- *Expand [List(sales#0, returns#0, profit#0, channel#0, id#0, 0), List(sales#0, returns#0, profit#0, channel#0, null, 1), List(sales#0, returns#0, profit#0, null, null, 3)], [sales#0, returns#0, profit#0, channel#0, id#0, spark_grouping_id#0]
            +- Union
               :- *HashAggregate(keys=[s_store_id#0], functions=[sum(UnscaledValue(ss_ext_sales_price#0)), sum(coalesce(cast(sr_return_amt#0 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ss_net_profit#0 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#0 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)))])
               :  +- Exchange hashpartitioning(s_store_id#0, 5)
               :     +- *HashAggregate(keys=[s_store_id#0], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#0)), partial_sum(coalesce(cast(sr_return_amt#0 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ss_net_profit#0 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#0 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)))])
               :        +- *Project [s_store_id#0, sr_return_amt#0, sr_net_loss#0, ss_net_profit#0, ss_ext_sales_price#0]
               :           +- *BroadcastHashJoin [ss_promo_sk#0], [p_promo_sk#0], Inner, BuildRight
               :              :- *Project [s_store_id#0, sr_return_amt#0, sr_net_loss#0, ss_promo_sk#0, ss_net_profit#0, ss_ext_sales_price#0]
               :              :  +- *BroadcastHashJoin [ss_item_sk#0], [i_item_sk#0], Inner, BuildRight
               :              :     :- *Project [s_store_id#0, sr_return_amt#0, sr_net_loss#0, ss_item_sk#0, ss_promo_sk#0, ss_net_profit#0, ss_ext_sales_price#0]
               :              :     :  +- *BroadcastHashJoin [ss_store_sk#0], [s_store_sk#0], Inner, BuildRight
               :              :     :     :- *Project [sr_return_amt#0, sr_net_loss#0, ss_item_sk#0, ss_store_sk#0, ss_promo_sk#0, ss_net_profit#0, ss_ext_sales_price#0]
               :              :     :     :  +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
               :              :     :     :     :- *Project [sr_return_amt#0, sr_net_loss#0, ss_item_sk#0, ss_store_sk#0, ss_sold_date_sk#0, ss_promo_sk#0, ss_net_profit#0, ss_ext_sales_price#0]
               :              :     :     :     :  +- *BroadcastHashJoin [cast(ss_item_sk#0 as bigint), cast(ss_ticket_number#0 as bigint)], [sr_item_sk#0L, sr_ticket_number#0L], LeftOuter, BuildRight
               :              :     :     :     :     :- *Project [ss_item_sk#0, ss_ticket_number#0, ss_store_sk#0, ss_sold_date_sk#0, ss_promo_sk#0, ss_net_profit#0, ss_ext_sales_price#0]
               :              :     :     :     :     :  +- *Filter (((isnotnull(ss_item_sk#0) && isnotnull(ss_store_sk#0)) && isnotnull(ss_promo_sk#0)) && isnotnull(ss_sold_date_sk#0))
               :              :     :     :     :     :     +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_item_sk#0,ss_store_sk#0,ss_promo_sk#0,ss_ticket_number#0,ss_ext_sales_price#0,ss_net_profit#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ss...
               :              :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true], input[1, bigint, true]))
               :              :     :     :     :        +- *FileScan parquet default.store_returns[sr_item_sk#0L,sr_ticket_number#0L,sr_return_amt#0,sr_net_loss#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,sr_net_loss:decimal(7...
               :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :              :     :     :        +- *Project [d_date_sk#0]
               :              :     :     :           +- *Filter (((isnotnull(d_date_sk#0) && (d_date#0 <= 2000-09-22)) && isnotnull(d_date#0)) && (2000-08-23 <= d_date#0))
               :              :     :     :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_date#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_date:string>
               :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :              :     :        +- *Project [s_store_id#0, s_store_sk#0]
               :              :     :           +- *Filter isnotnull(s_store_sk#0)
               :              :     :              +- *FileScan parquet default.store[s_store_sk#0,s_store_id#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,s_store_id:string>
               :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :              :        +- *Project [i_item_sk#0]
               :              :           +- *Filter ((isnotnull(i_item_sk#0) && isnotnull(i_current_price#0)) && (i_current_price#0 > 50.00))
               :              :              +- *FileScan parquet default.item[i_item_sk#0,i_current_price#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,2)>
               :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :                 +- *Project [p_promo_sk#0]
               :                    +- *Filter ((isnotnull(p_channel_tv#0) && isnotnull(p_promo_sk#0)) && (p_channel_tv#0 = N))
               :                       +- *FileScan parquet default.promotion[p_promo_sk#0,p_channel_tv#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,p_channel_tv:string>
               :- *HashAggregate(keys=[cp_catalog_page_id#0], functions=[sum(UnscaledValue(cs_ext_sales_price#0)), sum(coalesce(cast(cr_return_amount#0 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(cs_net_profit#0 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#0 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)))])
               :  +- Exchange hashpartitioning(cp_catalog_page_id#0, 5)
               :     +- *HashAggregate(keys=[cp_catalog_page_id#0], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#0)), partial_sum(coalesce(cast(cr_return_amount#0 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(cs_net_profit#0 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#0 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)))])
               :        +- *Project [cp_catalog_page_id#0, cr_net_loss#0, cs_net_profit#0, cr_return_amount#0, cs_ext_sales_price#0]
               :           +- *BroadcastHashJoin [cs_promo_sk#0], [p_promo_sk#0], Inner, BuildRight
               :              :- *Project [cp_catalog_page_id#0, cr_net_loss#0, cs_net_profit#0, cr_return_amount#0, cs_promo_sk#0, cs_ext_sales_price#0]
               :              :  +- *BroadcastHashJoin [cs_item_sk#0], [i_item_sk#0], Inner, BuildRight
               :              :     :- *Project [cp_catalog_page_id#0, cr_net_loss#0, cs_net_profit#0, cr_return_amount#0, cs_promo_sk#0, cs_ext_sales_price#0, cs_item_sk#0]
               :              :     :  +- *BroadcastHashJoin [cs_catalog_page_sk#0], [cp_catalog_page_sk#0], Inner, BuildRight
               :              :     :     :- *Project [cr_net_loss#0, cs_net_profit#0, cs_catalog_page_sk#0, cr_return_amount#0, cs_promo_sk#0, cs_ext_sales_price#0, cs_item_sk#0]
               :              :     :     :  +- *BroadcastHashJoin [cs_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
               :              :     :     :     :- *Project [cr_net_loss#0, cs_net_profit#0, cs_catalog_page_sk#0, cr_return_amount#0, cs_promo_sk#0, cs_ext_sales_price#0, cs_sold_date_sk#0, cs_item_sk#0]
               :              :     :     :     :  +- *BroadcastHashJoin [cs_item_sk#0, cs_order_number#0], [cr_item_sk#0, cr_order_number#0], LeftOuter, BuildRight
               :              :     :     :     :     :- *Project [cs_order_number#0, cs_net_profit#0, cs_catalog_page_sk#0, cs_promo_sk#0, cs_ext_sales_price#0, cs_sold_date_sk#0, cs_item_sk#0]
               :              :     :     :     :     :  +- *Filter (((isnotnull(cs_promo_sk#0) && isnotnull(cs_sold_date_sk#0)) && isnotnull(cs_catalog_page_sk#0)) && isnotnull(cs_item_sk#0))
               :              :     :     :     :     :     +- *FileScan parquet default.catalog_sales[cs_sold_date_sk#0,cs_catalog_page_sk#0,cs_item_sk#0,cs_promo_sk#0,cs_order_number#0,cs_ext_sales_price#0,cs_net_profit#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,cs_order_number:...
               :              :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, true] as bigint), 32) | (cast(input[1, int, true] as bigint) & 4294967295))))
               :              :     :     :     :        +- *FileScan parquet default.catalog_returns[cr_item_sk#0,cr_order_number#0,cr_return_amount#0,cr_net_loss#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,2)>
               :              :     :     :     +- ReusedExchange [d_date_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :              :     :        +- *Project [cp_catalog_page_sk#0, cp_catalog_page_id#0]
               :              :     :           +- *Filter isnotnull(cp_catalog_page_sk#0)
               :              :     :              +- *FileScan parquet default.catalog_page[cp_catalog_page_sk#0,cp_catalog_page_id#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,cp_catalog_page_id:string>
               :              :     +- ReusedExchange [i_item_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :              +- ReusedExchange [p_promo_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               +- *HashAggregate(keys=[web_site_id#0], functions=[sum(UnscaledValue(ws_ext_sales_price#0)), sum(coalesce(cast(wr_return_amt#0 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ws_net_profit#0 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#0 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)))])
                  +- Exchange hashpartitioning(web_site_id#0, 5)
                     +- *HashAggregate(keys=[web_site_id#0], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#0)), partial_sum(coalesce(cast(wr_return_amt#0 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ws_net_profit#0 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#0 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)))])
                        +- *Project [web_site_id#0, ws_net_profit#0, ws_ext_sales_price#0, wr_return_amt#0, wr_net_loss#0]
                           +- *BroadcastHashJoin [ws_promo_sk#0], [p_promo_sk#0], Inner, BuildRight
                              :- *Project [ws_promo_sk#0, web_site_id#0, ws_net_profit#0, ws_ext_sales_price#0, wr_return_amt#0, wr_net_loss#0]
                              :  +- *BroadcastHashJoin [ws_item_sk#0], [i_item_sk#0], Inner, BuildRight
                              :     :- *Project [ws_promo_sk#0, ws_item_sk#0, web_site_id#0, ws_net_profit#0, ws_ext_sales_price#0, wr_return_amt#0, wr_net_loss#0]
                              :     :  +- *BroadcastHashJoin [ws_web_site_sk#0], [web_site_sk#0], Inner, BuildRight
                              :     :     :- *Project [ws_promo_sk#0, ws_item_sk#0, ws_net_profit#0, ws_ext_sales_price#0, wr_return_amt#0, wr_net_loss#0, ws_web_site_sk#0]
                              :     :     :  +- *BroadcastHashJoin [ws_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
                              :     :     :     :- *Project [ws_promo_sk#0, ws_item_sk#0, ws_sold_date_sk#0, ws_net_profit#0, ws_ext_sales_price#0, wr_return_amt#0, wr_net_loss#0, ws_web_site_sk#0]
                              :     :     :     :  +- *BroadcastHashJoin [cast(ws_item_sk#0 as bigint), cast(ws_order_number#0 as bigint)], [wr_item_sk#0L, wr_order_number#0L], LeftOuter, BuildRight
                              :     :     :     :     :- *Project [ws_order_number#0, ws_promo_sk#0, ws_item_sk#0, ws_sold_date_sk#0, ws_net_profit#0, ws_ext_sales_price#0, ws_web_site_sk#0]
                              :     :     :     :     :  +- *Filter (((isnotnull(ws_promo_sk#0) && isnotnull(ws_item_sk#0)) && isnotnull(ws_web_site_sk#0)) && isnotnull(ws_sold_date_sk#0))
                              :     :     :     :     :     +- *FileScan parquet default.web_sales[ws_sold_date_sk#0,ws_item_sk#0,ws_web_site_sk#0,ws_promo_sk#0,ws_order_number#0,ws_ext_sales_price#0,ws_net_profit#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,...
                              :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true], input[1, bigint, true]))
                              :     :     :     :        +- *FileScan parquet default.web_returns[wr_item_sk#0L,wr_order_number#0L,wr_return_amt#0,wr_net_loss#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,2)>
                              :     :     :     +- ReusedExchange [d_date_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                              :     :        +- *Project [web_site_sk#0, web_site_id#0]
                              :     :           +- *Filter isnotnull(web_site_sk#0)
                              :     :              +- *FileScan parquet default.web_site[web_site_sk#0,web_site_id#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,web_site_id:string>
                              :     +- ReusedExchange [i_item_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                              +- ReusedExchange [p_promo_sk#0], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
