TakeOrderedAndProject(limit=100, orderBy=[i_manager_id#0 ASC NULLS FIRST,avg_monthly_sales#0 ASC NULLS FIRST,sum_sales#0 ASC NULLS FIRST], output=[i_manager_id#0,sum_sales#0,avg_monthly_sales#0])
+- *Project [i_manager_id#0, sum_sales#0, avg_monthly_sales#0]
   +- *Filter (0.1000000000000000 < CASE WHEN (avg_monthly_sales#0 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#0 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#0 as decimal(22,6)))), DecimalType(22,6)))) / promote_precision(cast(avg_monthly_sales#0 as decimal(22,6)))), DecimalType(38,16)) ELSE null END)
      +- Window [avg(_w0#0) windowspecdefinition(i_manager_id#0, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS none#0], [i_manager_id#0]
         +- *Sort [i_manager_id#0 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_manager_id#0, 5)
               +- *HashAggregate(keys=[i_manager_id#0, d_moy#0], functions=[sum(UnscaledValue(ss_sales_price#0))])
                  +- Exchange hashpartitioning(i_manager_id#0, d_moy#0, 5)
                     +- *HashAggregate(keys=[i_manager_id#0, d_moy#0], functions=[partial_sum(UnscaledValue(ss_sales_price#0))])
                        +- *Project [ss_sales_price#0, i_manager_id#0, d_moy#0]
                           +- *BroadcastHashJoin [ss_store_sk#0], [s_store_sk#0], Inner, BuildRight
                              :- *Project [ss_sales_price#0, i_manager_id#0, d_moy#0, ss_store_sk#0]
                              :  +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
                              :     :- *Project [ss_sales_price#0, i_manager_id#0, ss_store_sk#0, ss_sold_date_sk#0]
                              :     :  +- *BroadcastHashJoin [i_item_sk#0], [ss_item_sk#0], Inner, BuildRight
                              :     :     :- *Project [i_manager_id#0, i_item_sk#0]
                              :     :     :  +- *Filter (isnotnull(i_item_sk#0) && (((i_brand#0 IN (amalgimporto #1,edu packscholar #1,exportiimporto #1,importoamalg #1) && i_class#0 IN (accessories,classical,fragrances,pants)) && i_category#0 IN (Women,Music,Men)) || ((i_category#0 IN (Books,Children,Electronics) && i_class#0 IN (personal,portable,reference,self-help)) && i_brand#0 IN (scholaramalgamalg #14,scholaramalgamalg #7,exportiunivamalg #9,scholaramalgamalg #9))))
                              :     :     :     +- *FileScan parquet default.item[i_item_sk#0,i_brand#0,i_class#0,i_category#0,i_manager_id#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,i_manager_id:int>
                              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)))
                              :     :        +- *Project [ss_sales_price#0, ss_item_sk#0, ss_store_sk#0, ss_sold_date_sk#0]
                              :     :           +- *Filter (((((ss_sold_date_sk#0 >= 2452123) && isnotnull(ss_item_sk#0)) && isnotnull(ss_store_sk#0)) && (ss_sold_date_sk#0 <= 2452487)) && isnotnull(ss_sold_date_sk#0))
                              :     :              +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_item_sk#0,ss_store_sk#0,ss_sales_price#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,2)>
                              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                              :        +- *Project [d_date_sk#0, d_moy#0]
                              :           +- *Filter (((isnotnull(d_date_sk#0) && (2452123 <= d_date_sk#0)) && d_month_seq#0 INSET (1222,1228,1223,1227,1219,1226,1224,1225,1230,1220,1221,1229)) && (2452487 >= d_date_sk#0))
                              :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_month_seq#0,d_moy#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_moy:int>
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                                 +- *Project [s_store_sk#0]
                                    +- *Filter isnotnull(s_store_sk#0)
                                       +- *FileScan parquet default.store[s_store_sk#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>, ReadSchema: struct<s_store_sk:int>
