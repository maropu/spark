*Sort [cnt#0L DESC NULLS LAST], true, 0
+- Exchange rangepartitioning(cnt#0L DESC NULLS LAST, 5)
   +- *Project [c_last_name#0, ss_ticket_number#0, cnt#0L, c_preferred_cust_flag#0, c_salutation#0, c_first_name#0]
      +- *BroadcastHashJoin [ss_customer_sk#0], [c_customer_sk#0], Inner, BuildRight
         :- *Filter ((cnt#0L >= 1) && (cnt#0L <= 5))
         :  +- *HashAggregate(keys=[ss_ticket_number#0, ss_customer_sk#0], functions=[count(1)])
         :     +- Exchange hashpartitioning(ss_ticket_number#0, ss_customer_sk#0, 5)
         :        +- *HashAggregate(keys=[ss_ticket_number#0, ss_customer_sk#0], functions=[partial_count(1)])
         :           +- *Project [ss_ticket_number#0, ss_customer_sk#0]
         :              +- *BroadcastHashJoin [ss_hdemo_sk#0], [hd_demo_sk#0], Inner, BuildRight
         :                 :- *Project [ss_hdemo_sk#0, ss_ticket_number#0, ss_customer_sk#0]
         :                 :  +- *BroadcastHashJoin [ss_store_sk#0], [s_store_sk#0], Inner, BuildRight
         :                 :     :- *Project [ss_hdemo_sk#0, ss_ticket_number#0, ss_store_sk#0, ss_customer_sk#0]
         :                 :     :  +- *BroadcastHashJoin [ss_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
         :                 :     :     :- *Project [ss_hdemo_sk#0, ss_ticket_number#0, ss_store_sk#0, ss_sold_date_sk#0, ss_customer_sk#0]
         :                 :     :     :  +- *Filter ((((isnotnull(ss_hdemo_sk#0) && isnotnull(ss_store_sk#0)) && ss_sold_date_sk#0 INSET (2451790,2451119,2451180,2451454,2450874,2450906,2450967,2451485,2451850,2451514,2451270,2451758,2451028,2451546,2450997,2450996,2451393,2451667,2451453,2451819,2450905,2451331,2451577,2451089,2451301,2451545,2451605,2451851,2451181,2451149,2451820,2451362,2451392,2451240,2450935,2451637,2451484,2451058,2451300,2451727,2451759,2450815,2451698,2451150,2451332,2451606,2451666,2451211,2450846,2450875,2450966,2450936,2451361,2451212,2451880,2451059,2451789,2451423,2451576,2450816,2451088,2451728,2451027,2451120,2451881,2451697,2450847,2451271,2451636,2451515,2451424,2451239)) && isnotnull(ss_customer_sk#0)) && isnotnull(ss_sold_date_sk#0))
         :                 :     :     :     +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_customer_sk#0,ss_hdemo_sk#0,ss_store_sk#0,ss_ticket_number#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,ss_ticket_number:int>
         :                 :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :                 :     :        +- *Project [d_date_sk#0]
         :                 :     :           +- *Filter (((((d_year#0 IN (1998,1999,2000) && d_date_sk#0 INSET (2451790,2451119,2451180,2451454,2450874,2450906,2450967,2451485,2451850,2451514,2451270,2451758,2451028,2451546,2450997,2450996,2451393,2451667,2451453,2451819,2450905,2451331,2451577,2451089,2451301,2451545,2451605,2451851,2451181,2451149,2451820,2451362,2451392,2451240,2450935,2451637,2451484,2451058,2451300,2451727,2451759,2450815,2451698,2451150,2451332,2451606,2451666,2451211,2450846,2450875,2450966,2450936,2451361,2451212,2451880,2451059,2451789,2451423,2451576,2450816,2451088,2451728,2451027,2451120,2451881,2451697,2450847,2451271,2451636,2451515,2451424,2451239)) && isnotnull(d_date_sk#0)) && isnotnull(d_dom#0)) && (2 >= d_dom#0)) && (1 <= d_dom#0))
         :                 :     :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0,d_dom#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_dom:int>
         :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :                 :        +- *Project [s_store_sk#0]
         :                 :           +- *Filter (s_county#0 IN (Fairfield County,Ziebach County,Bronx County,Barrow County) && isnotnull(s_store_sk#0))
         :                 :              +- *FileScan parquet default.store[s_store_sk#0,s_county#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,s_county:string>
         :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
         :                    +- *Project [hd_demo_sk#0]
         :                       +- *Filter (((((1.0 < CASE WHEN (0 < hd_vehicle_count#0) THEN (cast(hd_dep_count#0 as double) / cast(hd_vehicle_count#0 as double)) ELSE null END) && ((hd_buy_potential#0 = Unknown) || (hd_buy_potential#0 = >10000))) && isnotnull(hd_vehicle_count#0)) && isnotnull(hd_demo_sk#0)) && (0 < hd_vehicle_count#0))
         :                          +- *FileScan parquet default.household_demographics[hd_demo_sk#0,hd_buy_potential#0,hd_dep_count#0,hd_vehicle_count#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,hd_vehicle_count:int>
         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
            +- *Project [c_first_name#0, c_last_name#0, c_customer_sk#0, c_preferred_cust_flag#0, c_salutation#0]
               +- *Filter isnotnull(c_customer_sk#0)
                  +- *FileScan parquet default.customer[c_customer_sk#0,c_salutation#0,c_first_name#0,c_last_name#0,c_preferred_cust_flag#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,c_preferred_c...
