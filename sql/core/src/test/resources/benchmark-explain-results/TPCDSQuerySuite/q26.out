TakeOrderedAndProject(limit=100, orderBy=[i_item_id#0 ASC NULLS FIRST], output=[i_item_id#0,agg1#0,agg2#0,agg3#0,agg4#0])
+- *HashAggregate(keys=[i_item_id#0], functions=[avg(cast(cs_quantity#0 as bigint)), avg(UnscaledValue(cs_list_price#0)), avg(UnscaledValue(cs_coupon_amt#0)), avg(UnscaledValue(cs_sales_price#0))])
   +- Exchange hashpartitioning(i_item_id#0, 5)
      +- *HashAggregate(keys=[i_item_id#0], functions=[partial_avg(cast(cs_quantity#0 as bigint)), partial_avg(UnscaledValue(cs_list_price#0)), partial_avg(UnscaledValue(cs_coupon_amt#0)), partial_avg(UnscaledValue(cs_sales_price#0))])
         +- *Project [cs_quantity#0, i_item_id#0, cs_coupon_amt#0, cs_sales_price#0, cs_list_price#0]
            +- *BroadcastHashJoin [cs_promo_sk#0], [p_promo_sk#0], Inner, BuildRight
               :- *Project [cs_quantity#0, i_item_id#0, cs_coupon_amt#0, cs_sales_price#0, cs_promo_sk#0, cs_list_price#0]
               :  +- *BroadcastHashJoin [cs_item_sk#0], [i_item_sk#0], Inner, BuildRight
               :     :- *Project [cs_quantity#0, cs_coupon_amt#0, cs_sales_price#0, cs_promo_sk#0, cs_item_sk#0, cs_list_price#0]
               :     :  +- *BroadcastHashJoin [cs_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
               :     :     :- *Project [cs_quantity#0, cs_coupon_amt#0, cs_sales_price#0, cs_promo_sk#0, cs_sold_date_sk#0, cs_item_sk#0, cs_list_price#0]
               :     :     :  +- *BroadcastHashJoin [cs_bill_cdemo_sk#0], [cd_demo_sk#0], Inner, BuildRight
               :     :     :     :- *Project [cs_quantity#0, cs_bill_cdemo_sk#0, cs_coupon_amt#0, cs_sales_price#0, cs_promo_sk#0, cs_sold_date_sk#0, cs_item_sk#0, cs_list_price#0]
               :     :     :     :  +- *Filter (((isnotnull(cs_promo_sk#0) && isnotnull(cs_bill_cdemo_sk#0)) && isnotnull(cs_sold_date_sk#0)) && isnotnull(cs_item_sk#0))
               :     :     :     :     +- *FileScan parquet default.catalog_sales[cs_sold_date_sk#0,cs_bill_cdemo_sk#0,cs_item_sk#0,cs_promo_sk#0,cs_quantity#0,cs_list_price#0,cs_sales_price#0,cs_coupon_amt#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,cs...
               :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :     :        +- *Project [cd_demo_sk#0]
               :     :     :           +- *Filter (((((((cd_gender#0 = M) && (cd_marital_status#0 = S)) && isnotnull(cd_education_status#0)) && (College = cd_education_status#0)) && isnotnull(cd_marital_status#0)) && isnotnull(cd_demo_sk#0)) && isnotnull(cd_gender#0))
               :     :     :              +- *FileScan parquet default.customer_demographics[cd_demo_sk#0,cd_gender#0,cd_marital_status#0,cd_education_status#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,cd_education_status:string>
               :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :     :        +- *Project [d_date_sk#0]
               :     :           +- *Filter ((isnotnull(d_date_sk#0) && isnotnull(d_year#0)) && (2000 = d_year#0))
               :     :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_year:int>
               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :        +- *Project [i_item_sk#0, i_item_id#0]
               :           +- *Filter isnotnull(i_item_sk#0)
               :              +- *FileScan parquet default.item[i_item_sk#0,i_item_id#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,i_item_id:string>
               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  +- *Project [p_promo_sk#0]
                     +- *Filter (((p_channel_email#0 = N) || (p_channel_event#0 = N)) && isnotnull(p_promo_sk#0))
                        +- *FileScan parquet default.promotion[p_promo_sk#0,p_channel_email#0,p_channel_event#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,p_channel_event:string>
