*Sort [supp_nation#0 ASC NULLS FIRST, cust_nation#0 ASC NULLS FIRST, l_year#0 ASC NULLS FIRST], true, 0
+- Exchange rangepartitioning(supp_nation#0 ASC NULLS FIRST, cust_nation#0 ASC NULLS FIRST, l_year#0 ASC NULLS FIRST, 5)
   +- *HashAggregate(keys=[supp_nation#0, cust_nation#0, l_year#0], functions=[sum(volume#0)])
      +- Exchange hashpartitioning(supp_nation#0, cust_nation#0, l_year#0, 5)
         +- *HashAggregate(keys=[supp_nation#0, cust_nation#0, l_year#0], functions=[partial_sum(volume#0)])
            +- *Project [year(l_shipdate#0) AS none#0, CheckOverflow((promote_precision(cast(l_extendedprice#0 as decimal(11,0))) * promote_precision(CheckOverflow((1 - promote_precision(cast(l_discount#0 as decimal(11,0)))), DecimalType(11,0)))), DecimalType(22,0)) AS none#0, n_name#0 AS none#0, n_name#0 AS none#0]
               +- *BroadcastHashJoin [cast(c_nationkey#0 as bigint)], [n_nationkey#0L], Inner, BuildRight, (((n_name#0 = FRANCE) && (n_name#0 = GERMANY)) || ((n_name#0 = GERMANY) && (n_name#0 = FRANCE)))
                  :- *Project [l_shipdate#0, l_discount#0, c_nationkey#0, n_name#0, l_extendedprice#0]
                  :  +- *BroadcastHashJoin [s_nationkey#0L], [n_nationkey#0L], Inner, BuildRight
                  :     :- *Project [l_shipdate#0, s_nationkey#0L, l_discount#0, c_nationkey#0, l_extendedprice#0]
                  :     :  +- *BroadcastHashJoin [o_custkey#0L], [c_custkey#0L], Inner, BuildRight
                  :     :     :- *Project [o_custkey#0L, l_shipdate#0, s_nationkey#0L, l_discount#0, l_extendedprice#0]
                  :     :     :  +- *BroadcastHashJoin [l_orderkey#0L], [o_orderkey#0L], Inner, BuildRight
                  :     :     :     :- *Project [l_shipdate#0, s_nationkey#0L, l_discount#0, l_orderkey#0L, l_extendedprice#0]
                  :     :     :     :  +- *BroadcastHashJoin [s_suppkey#0L], [l_suppkey#0L], Inner, BuildRight
                  :     :     :     :     :- *Project [s_suppkey#0L, s_nationkey#0L]
                  :     :     :     :     :  +- *Filter (isnotnull(s_suppkey#0L) && isnotnull(s_nationkey#0L))
                  :     :     :     :     :     +- *FileScan parquet default.supplier[s_suppkey#0L,s_nationkey#0L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,s_nationkey:bigint>
                  :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, bigint, true]))
                  :     :     :     :        +- *Project [l_shipdate#0, l_discount#0, l_suppkey#0L, l_orderkey#0L, l_extendedprice#0]
                  :     :     :     :           +- *Filter (((((l_shipdate#0 >= 9131) && isnotnull(l_shipdate#0)) && isnotnull(l_orderkey#0L)) && (l_shipdate#0 <= 9861)) && isnotnull(l_suppkey#0L))
                  :     :     :     :              +- *FileScan parquet default.lineitem[l_orderkey#0L,l_suppkey#0L,l_extendedprice#0,l_discount#0,l_shipdate#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,...
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]))
                  :     :     :        +- *Project [o_custkey#0L, o_orderkey#0L]
                  :     :     :           +- *Filter (isnotnull(o_custkey#0L) && isnotnull(o_orderkey#0L))
                  :     :     :              +- *FileScan parquet default.orders[o_orderkey#0L,o_custkey#0L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,o_custkey:bigint>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]))
                  :     :        +- *Project [c_custkey#0L, c_nationkey#0]
                  :     :           +- *Filter (isnotnull(c_nationkey#0) && isnotnull(c_custkey#0L))
                  :     :              +- *FileScan parquet default.customer[c_custkey#0L,c_nationkey#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,c_nationkey:string>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]))
                  :        +- *Project [n_name#0, n_nationkey#0L]
                  :           +- *Filter isnotnull(n_nationkey#0L)
                  :              +- *FileScan parquet default.nation[n_nationkey#0L,n_name#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,n_name:string>
                  +- ReusedExchange [n_nationkey#0L, n_name#0], BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]))
