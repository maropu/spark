TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#0 DESC NULLS LAST,CASE WHEN (cast(lochierarchy#0 as int) = 0) THEN i_category#0 END ASC NULLS FIRST,rank_within_parent#0 ASC NULLS FIRST], output=[total_sum#0,i_category#0,i_class#0,lochierarchy#0,rank_within_parent#0])
+- *Project [lochierarchy#0, i_class#0, rank_within_parent#0, total_sum#0, i_category#0]
   +- Window [rank(_w3#0) windowspecdefinition(_w1#0, _w2#0, _w3#0 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS none#0], [_w1#0, _w2#0], [_w3#0 DESC NULLS LAST]
      +- *Sort [_w1#0 ASC NULLS FIRST, _w2#0 ASC NULLS FIRST, _w3#0 DESC NULLS LAST], false, 0
         +- Exchange hashpartitioning(_w1#0, _w2#0, 5)
            +- *HashAggregate(keys=[i_category#0, i_class#0, spark_grouping_id#0], functions=[sum(UnscaledValue(ws_net_paid#0))])
               +- Exchange hashpartitioning(i_category#0, i_class#0, spark_grouping_id#0, 5)
                  +- *HashAggregate(keys=[i_category#0, i_class#0, spark_grouping_id#0], functions=[partial_sum(UnscaledValue(ws_net_paid#0))])
                     +- *Expand [List(ws_net_paid#0, i_category#0, i_class#0, 0), List(ws_net_paid#0, i_category#0, null, 1), List(ws_net_paid#0, null, null, 3)], [ws_net_paid#0, i_category#0, i_class#0, spark_grouping_id#0]
                        +- *Project [i_category#0, ws_net_paid#0, i_class#0]
                           +- *BroadcastHashJoin [ws_item_sk#0], [i_item_sk#0], Inner, BuildRight
                              :- *Project [ws_item_sk#0, ws_net_paid#0]
                              :  +- *BroadcastHashJoin [ws_sold_date_sk#0], [d_date_sk#0], Inner, BuildRight
                              :     :- *Project [ws_item_sk#0, ws_sold_date_sk#0, ws_net_paid#0]
                              :     :  +- *Filter (isnotnull(ws_item_sk#0) && isnotnull(ws_sold_date_sk#0))
                              :     :     +- *FileScan parquet default.web_sales[ws_sold_date_sk#0,ws_item_sk#0,ws_net_paid#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,2)>
                              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                              :        +- *Project [d_date_sk#0]
                              :           +- *Filter (((isnotnull(d_month_seq#0) && (d_month_seq#0 >= 1200)) && isnotnull(d_date_sk#0)) && (d_month_seq#0 <= 1211))
                              :              +- *FileScan parquet default.date_dim[d_date_sk#0,d_month_seq#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_month_seq:int>
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                                 +- *Project [i_item_sk#0, i_class#0, i_category#0]
                                    +- *Filter isnotnull(i_item_sk#0)
                                       +- *FileScan parquet default.item[i_item_sk#0,i_class#0,i_category#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,i_category:string>
