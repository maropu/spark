TakeOrderedAndProject(limit=100, orderBy=[s_store_name#0 ASC NULLS FIRST,s_store_id#0 ASC NULLS FIRST,sun_sales#0 ASC NULLS FIRST,mon_sales#0 ASC NULLS FIRST,tue_sales#0 ASC NULLS FIRST,wed_sales#0 ASC NULLS FIRST,thu_sales#0 ASC NULLS FIRST,fri_sales#0 ASC NULLS FIRST,sat_sales#0 ASC NULLS FIRST], output=[s_store_name#0,s_store_id#0,sun_sales#0,mon_sales#0,tue_sales#0,wed_sales#0,thu_sales#0,fri_sales#0,sat_sales#0])
+- *HashAggregate(keys=[s_store_name#0, s_store_id#0], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#0 = Sunday) THEN ss_sales_price#0 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#0 = Monday) THEN ss_sales_price#0 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#0 = Tuesday) THEN ss_sales_price#0 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#0 = Wednesday) THEN ss_sales_price#0 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#0 = Thursday) THEN ss_sales_price#0 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#0 = Friday) THEN ss_sales_price#0 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#0 = Saturday) THEN ss_sales_price#0 ELSE null END))])
   +- Exchange hashpartitioning(s_store_name#0, s_store_id#0, 5)
      +- *HashAggregate(keys=[s_store_name#0, s_store_id#0], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#0 = Sunday) THEN ss_sales_price#0 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#0 = Monday) THEN ss_sales_price#0 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#0 = Tuesday) THEN ss_sales_price#0 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#0 = Wednesday) THEN ss_sales_price#0 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#0 = Thursday) THEN ss_sales_price#0 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#0 = Friday) THEN ss_sales_price#0 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#0 = Saturday) THEN ss_sales_price#0 ELSE null END))])
         +- *Project [d_day_name#0, ss_sales_price#0, s_store_id#0, s_store_name#0]
            +- *BroadcastHashJoin [ss_store_sk#0], [s_store_sk#0], Inner, BuildRight
               :- *Project [d_day_name#0, ss_sales_price#0, ss_store_sk#0]
               :  +- *BroadcastHashJoin [d_date_sk#0], [ss_sold_date_sk#0], Inner, BuildRight
               :     :- *Project [d_date_sk#0, d_day_name#0]
               :     :  +- *Filter ((isnotnull(d_date_sk#0) && isnotnull(d_year#0)) && (2000 = d_year#0))
               :     :     +- *FileScan parquet default.date_dim[d_date_sk#0,d_year#0,d_day_name#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,d_day_name:string>
               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
               :        +- *Project [ss_sales_price#0, ss_store_sk#0, ss_sold_date_sk#0]
               :           +- *Filter (isnotnull(ss_store_sk#0) && isnotnull(ss_sold_date_sk#0))
               :              +- *FileScan parquet default.store_sales[ss_sold_date_sk#0,ss_store_sk#0,ss_sales_price#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,2)>
               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                  +- *Project [s_store_id#0, s_store_sk#0, s_store_name#0]
                     +- *Filter (((-5.00 = s_gmt_offset#0) && isnotnull(s_store_sk#0)) && isnotnull(s_gmt_offset#0))
                        +- *FileScan parquet default.store[s_store_sk#0,s_store_id#0,s_store_name#0,s_gmt_offset#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,2)>
