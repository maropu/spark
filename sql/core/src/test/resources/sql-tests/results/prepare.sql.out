-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 35


-- !query 0
CREATE TABLE t1(col0 SHORT, col1 INT, col2 LONG, col3 DOUBLE, col4 STRING) USING parquet
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
PREPARE p1(SHORT, INT, LONG, DOUBLE, STRING) AS INSERT INTO t1 VALUES ($1, $2, $3, $4, $5)
-- !query 1 schema
struct<>
-- !query 1 output



-- !query 2
EXECUTE p1(1S, 2, 3L, 3.8, "a")
-- !query 2 schema
struct<>
-- !query 2 output



-- !query 3
EXECUTE p1(2S, 8, 5L, 9.1, "b")
-- !query 3 schema
struct<>
-- !query 3 output



-- !query 4
SELECT * FROM t1
-- !query 4 schema
struct<col0:smallint,col1:int,col2:bigint,col3:double,col4:string>
-- !query 4 output
1	2	3	3.8	a
2	8	5	9.1	b


-- !query 5
EXECUTE p1(3Y, 3, 9Y, 1S, 3.8)
-- !query 5 schema
struct<>
-- !query 5 output



-- !query 6
EXECUTE p1(4S, 0Y, 2, 6S, 5L)
-- !query 6 schema
struct<>
-- !query 6 output



-- !query 7
PREPARE p2(SHORT, SHORT, INT, INT, DOUBLE) AS INSERT INTO t1 VALUES ($1, $2, $3, $4, $5)
-- !query 7 schema
struct<>
-- !query 7 output



-- !query 8
EXECUTE p2(0S, 5S, 8, 7, 8.1)
-- !query 8 schema
struct<>
-- !query 8 output



-- !query 9
EXECUTE p2(9Y, 1S, 8, 4Y, 2S)
-- !query 9 schema
struct<>
-- !query 9 output



-- !query 10
SELECT * FROM t1
-- !query 10 schema
struct<col0:smallint,col1:int,col2:bigint,col3:double,col4:string>
-- !query 10 output
0	5	8	7.0	8.1
1	2	3	3.8	a
2	8	5	9.1	b
3	3	9	1.0	3.8
4	0	2	6.0	5
9	1	8	4.0	2.0


-- !query 11
PREPARE p1(INT) AS INSERT INTO t1 VALUES (1S, $1, 8L, 5.7, "c")
-- !query 11 schema
struct<>
-- !query 11 output
org.apache.spark.sql.AnalysisException
Prepared statement p1 already exists;


-- !query 12
EXECUTE noexist(8)
-- !query 12 schema
struct<>
-- !query 12 output
org.apache.spark.sql.AnalysisException
Prepared statement `noexist` does not exist;


-- !query 13
EXECUTE p1(2S, 8, 5L, 9.1, "b", 1)
-- !query 13 schema
struct<>
-- !query 13 output



-- !query 14
EXECUTE p1(1S, 2)
-- !query 14 schema
struct<>
-- !query 14 output
org.apache.spark.sql.AnalysisException
Parameter `$3` not defined in a prepared statement: 'UnresolvedPreparedStatement p1, [1, 2]
;


-- !query 15
PREPARE p3(SHORT, INT) AS INSERT INTO t1 VALUES ($1, $2, $3, $4, $5)
-- !query 15 schema
struct<>
-- !query 15 output
org.apache.spark.sql.AnalysisException
Names of given parameter types do not match names of parameter holders. Prepared statement name: p3; names of parameter types: `1`, `2`; names of parameter holders: `1`, `2`, `3`, `4`, `5`.;


-- !query 16
PREPARE p4(SHORT, INT, LONG, DOUBLE, STRING) AS INSERT INTO t1 VALUES ($1, $2, $3, $4)
-- !query 16 schema
struct<>
-- !query 16 output
org.apache.spark.sql.AnalysisException
Names of given parameter types do not match names of parameter holders. Prepared statement name: p4; names of parameter types: `1`, `2`, `3`, `4`, `5`; names of parameter holders: `1`, `2`, `3`, `4`.;


-- !query 17
PREPARE p5(SHORT, INT, LONG, DOUBLE, STRING) AS INSERT INTO t1 VALUES ($3, $4, $5, $6, $7)
-- !query 17 schema
struct<>
-- !query 17 output
org.apache.spark.sql.AnalysisException
Names of given parameter types do not match names of parameter holders. Prepared statement name: p5; names of parameter types: `1`, `2`, `3`, `4`, `5`; names of parameter holders: `3`, `4`, `5`, `6`, `7`.;


-- !query 18
CREATE TABLE t2 USING parquet AS SELECT * FROM VALUES (1, 3.0, "5"), (2, 7.0, "3") AS t2(col0, col1, col2)
-- !query 18 schema
struct<>
-- !query 18 output



-- !query 19
PREPARE p6(INT, DOUBLE, STRING) AS SELECT * FROM t2 WHERE col0 = $1 AND col1 > $2 AND col2 = $3
-- !query 19 schema
struct<>
-- !query 19 output



-- !query 20
EXECUTE p6(1, 0.0, "a")
-- !query 20 schema
struct<col0:int,col1:decimal(2,1),col2:string>
-- !query 20 output



-- !query 21
EXECUTE p6(2, 0.0, "b")
-- !query 21 schema
struct<col0:int,col1:decimal(2,1),col2:string>
-- !query 21 output



-- !query 22
EXECUTE p6(0, 10.0, "c")
-- !query 22 schema
struct<col0:int,col1:decimal(2,1),col2:string>
-- !query 22 output



-- !query 23
PREPARE p7(INT, DOUBLE) AS SELECT col0, pow(col1, $1) value FROM t2 WHERE col0 = $2
-- !query 23 schema
struct<>
-- !query 23 output



-- !query 24
EXECUTE p7(1, 2.0)
-- !query 24 schema
struct<col0:int,value:double>
-- !query 24 output
2	7.0


-- !query 25
EXECUTE p7(2, -1.0)
-- !query 25 schema
struct<col0:int,value:double>
-- !query 25 output



-- !query 26
EXECUTE p6(1Y, 0, 5)
-- !query 26 schema
struct<col0:int,col1:decimal(2,1),col2:string>
-- !query 26 output
1	3	5


-- !query 27
PREPARE p8(SHORT, LONG, INT) AS SELECT * FROM t2 WHERE col0 = $1 AND col1 > $2 AND col2 = $3
-- !query 27 schema
struct<>
-- !query 27 output



-- !query 28
EXECUTE p8(2S, 0L, 3)
-- !query 28 schema
struct<col0:int,col1:decimal(2,1),col2:string>
-- !query 28 output
2	7	3


-- !query 29
EXECUTE p8(1Y, 1Y, 5S)
-- !query 29 schema
struct<col0:int,col1:decimal(2,1),col2:string>
-- !query 29 output
1	3	5


-- !query 30
EXECUTE p6("a", "b", "c")
-- !query 30 schema
struct<col0:int,col1:decimal(2,1),col2:string>
-- !query 30 output



-- !query 31
PREPARE p9(INT, DOUBLE) AS SELECT * FROM t2 WHERE col0 = $1 AND col1 > $2 AND col2 = $3
-- !query 31 schema
struct<>
-- !query 31 output
org.apache.spark.sql.AnalysisException
Names of given parameter types do not match names of parameter holders. Prepared statement name: p9; names of parameter types: `1`, `2`; names of parameter holders: `1`, `2`, `3`.;


-- !query 32
PREPARE p9(INT, DOUBLE, STRING) AS SELECT * FROM t2 WHERE col0 = $1
-- !query 32 schema
struct<>
-- !query 32 output
org.apache.spark.sql.AnalysisException
Names of given parameter types do not match names of parameter holders. Prepared statement name: p9; names of parameter types: `1`, `2`, `3`; names of parameter holders: `1`.;


-- !query 33
PREPARE p9(INT, DOUBLE, STRING) AS SELECT * FROM t2 WHERE col0 = $3 AND col1 > $4 AND col2 = $5
-- !query 33 schema
struct<>
-- !query 33 output
org.apache.spark.sql.AnalysisException
Names of given parameter types do not match names of parameter holders. Prepared statement name: p9; names of parameter types: `1`, `2`, `3`; names of parameter holders: `3`, `4`, `5`.;


-- !query 34
PREPARE p9(TIMESTAMP) AS SELECT * FROM t2 WHERE col1 > $1
-- !query 34 schema
struct<>
-- !query 34 output

