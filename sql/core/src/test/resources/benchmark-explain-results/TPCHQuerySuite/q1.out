*Sort [l_returnflag#0 ASC NULLS FIRST, l_linestatus#0 ASC NULLS FIRST], true, 0
+- Exchange rangepartitioning(l_returnflag#0 ASC NULLS FIRST, l_linestatus#0 ASC NULLS FIRST, 5)
   +- *HashAggregate(keys=[l_returnflag#0, l_linestatus#0], functions=[sum(l_quantity#0), sum(l_extendedprice#0), sum(CheckOverflow((promote_precision(cast(l_extendedprice#0 as decimal(11,0))) * promote_precision(CheckOverflow((1 - promote_precision(cast(l_discount#0 as decimal(11,0)))), DecimalType(11,0)))), DecimalType(22,0))), sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(l_extendedprice#0 as decimal(11,0))) * promote_precision(CheckOverflow((1 - promote_precision(cast(l_discount#0 as decimal(11,0)))), DecimalType(11,0)))), DecimalType(22,0))) * promote_precision(cast(CheckOverflow((1 + promote_precision(cast(l_tax#0 as decimal(11,0)))), DecimalType(11,0)) as decimal(22,0)))), DecimalType(34,0))), avg(UnscaledValue(l_quantity#0)), avg(UnscaledValue(l_extendedprice#0)), avg(UnscaledValue(l_discount#0)), count(1)])
      +- Exchange hashpartitioning(l_returnflag#0, l_linestatus#0, 5)
         +- *HashAggregate(keys=[l_returnflag#0, l_linestatus#0], functions=[partial_sum(l_quantity#0), partial_sum(l_extendedprice#0), partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#0 as decimal(11,0))) * promote_precision(CheckOverflow((1 - promote_precision(cast(l_discount#0 as decimal(11,0)))), DecimalType(11,0)))), DecimalType(22,0))), partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(l_extendedprice#0 as decimal(11,0))) * promote_precision(CheckOverflow((1 - promote_precision(cast(l_discount#0 as decimal(11,0)))), DecimalType(11,0)))), DecimalType(22,0))) * promote_precision(cast(CheckOverflow((1 + promote_precision(cast(l_tax#0 as decimal(11,0)))), DecimalType(11,0)) as decimal(22,0)))), DecimalType(34,0))), partial_avg(UnscaledValue(l_quantity#0)), partial_avg(UnscaledValue(l_extendedprice#0)), partial_avg(UnscaledValue(l_discount#0)), partial_count(1)])
            +- *Project [l_quantity#0, l_discount#0, l_returnflag#0, l_linestatus#0, l_tax#0, l_extendedprice#0]
               +- *Filter (isnotnull(l_shipdate#0) && (l_shipdate#0 <= 10471))
                  +- *FileScan parquet default.lineitem[l_quantity#0,l_extendedprice#0,l_discount#0,l_tax#0,l_returnflag#0,l_linestatus#0,l_shipdate#0] Batched: true, Format: Parquet, Location: InMemoryFileIndex[<PATH>,l_tax:deci...
